{"ast":null,"code":"import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'algorithm02';\nvar dependencies = ['typed', 'equalScalar'];\nexport var createAlgorithm02 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      equalScalar = _ref.equalScalar;\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n\n  return function algorithm02(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result (SparseMatrix)\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // loop columns in b\n\n    for (var j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k]; // update C(i,j)\n\n        var cij = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // check for nonzero\n\n        if (!eq(cij, zero)) {\n          // push i & v\n          cindex.push(i);\n          cvalues.push(cij);\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return sparseMatrix.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","map":{"version":3,"names":["factory","DimensionError","name","dependencies","createAlgorithm02","_ref","typed","equalScalar","algorithm02","denseMatrix","sparseMatrix","callback","inverse","adata","_data","asize","_size","adt","_datatype","bvalues","_values","bindex","_index","bptr","_ptr","bsize","bdt","length","RangeError","Error","rows","columns","dt","eq","zero","cf","find","convert","cvalues","cindex","cptr","j","k0","k1","k","i","cij","push","createSparseMatrix","values","index","ptr","size","datatype"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js"],"sourcesContent":["import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'algorithm02';\nvar dependencies = ['typed', 'equalScalar'];\nexport var createAlgorithm02 = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm02(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result (SparseMatrix)\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // loop columns in b\n\n    for (var j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k]; // update C(i,j)\n\n        var cij = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // check for nonzero\n\n        if (!eq(cij, zero)) {\n          // push i & v\n          cindex.push(i);\n          cvalues.push(cij);\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return sparseMatrix.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}