{"ast":null,"code":"import _slicedToArray from\"/Users/ayao/vscode/fourier-series-drawer/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{complex,multiply,exp,pi}from'mathjs';import integral from'./integral';/**\n * Converts an array of 2d points in the form [x, y] to a function that takes a real number t, 0 ≤ t ≤ 1\n * and outputs a complex number of the form x+iy according to the point [x, y] at the 100t% index in <points>\n * @param points array of tuples of [number, number]\n * @returns a function with domain t in the reals and 0 ≤ t ≤ 1, with codomain in the complex  numbers\n */export var functionFromPoints=function functionFromPoints(points){return function(t){var _points$Math$round=_slicedToArray(points[Math.round(t*(points.length-1))],2),re=_points$Math$round[0],im=_points$Math$round[1];return complex(re,im);};};/**\n * Computes the complex coefficient of the nth term in the Fourier series (determines the initial magnitude and angle)\n * give by the formula c_n = \\int_0^1 f(t)e^{2πitn} dt\n * @param n integer\n * @param f a function from the reals to the complex plane\n * @returns a complex number\n */var computeFourierCoefficient=function computeFourierCoefficient(n,f){var n_t=function n_t(t){return multiply(f(t),exp(multiply(n*2*pi*t,complex(0,1))));};var dt=0.001;return integral(0,1,n_t,dt);};/**\n * Computes the Fourier series of a given complex function up to <n_total> terms and returns an unsummed array\n * of the value of each term (which allows for individual rendering of the value of each term)\n * @param n_total number of terms of the Fourier series to compute\n * @param f function from reals to complex plane\n * @returns an array of complex values representing the value of each term in the series at <t>\n */export var computeFourierSeries=function computeFourierSeries(n_total,f){var constants={};for(var _n=Math.round(-n_total/2);_n<Math.round(n_total/2);_n++){constants[_n]=computeFourierCoefficient(_n,f);}return function(t){return Object.entries(constants).map(function(_ref){var _ref2=_slicedToArray(_ref,2),n=_ref2[0],c=_ref2[1];return multiply(c,exp(multiply(Number(n)*2*pi*t,complex(0,1))));});};};","map":{"version":3,"names":["complex","multiply","exp","pi","integral","functionFromPoints","points","t","Math","round","length","re","im","computeFourierCoefficient","n","f","n_t","dt","computeFourierSeries","n_total","constants","Object","entries","map","c","Number"],"sources":["/Users/ayao/vscode/fourier-series-drawer/src/computations/index.ts"],"sourcesContent":["import { complex, Complex, multiply, exp, pi } from 'mathjs'\nimport integral from './integral'\n\n/**\n * Converts an array of 2d points in the form [x, y] to a function that takes a real number t, 0 ≤ t ≤ 1\n * and outputs a complex number of the form x+iy according to the point [x, y] at the 100t% index in <points>\n * @param points array of tuples of [number, number]\n * @returns a function with domain t in the reals and 0 ≤ t ≤ 1, with codomain in the complex  numbers\n */\nexport const functionFromPoints = (points: Array<[number, number]>): (t: number) => Complex => {\n    return (t: number) => {\n        const [re, im] = points[Math.round(t * (points.length - 1))]\n        return complex(re, im)\n    }\n}\n\n/**\n * Computes the complex coefficient of the nth term in the Fourier series (determines the initial magnitude and angle)\n * give by the formula c_n = \\int_0^1 f(t)e^{2πitn} dt\n * @param n integer\n * @param f a function from the reals to the complex plane\n * @returns a complex number\n */\nconst computeFourierCoefficient = (n: number, f: (t: number) => Complex): Complex => {\n    const n_t = (t: number): Complex => (\n        multiply(\n            f(t),\n            exp(\n                multiply(n * 2 * pi * t, complex(0, 1)) as Complex\n        )) as Complex\n    )\n    \n    const dt = 0.001\n    return integral(0, 1, n_t, dt)\n}\n\n/**\n * Computes the Fourier series of a given complex function up to <n_total> terms and returns an unsummed array\n * of the value of each term (which allows for individual rendering of the value of each term)\n * @param n_total number of terms of the Fourier series to compute\n * @param f function from reals to complex plane\n * @returns an array of complex values representing the value of each term in the series at <t>\n */\nexport const computeFourierSeries = (n_total: number, f: (t: number) => Complex) => {\n    let constants: { [n: number]: Complex; } = {}\n\n    for (\n        let n = Math.round(-n_total / 2);\n        n < Math.round(n_total / 2);\n        n++\n    ) {\n        constants[n] = computeFourierCoefficient(n, f)\n    }\n\n    return (t: number): Complex[] => (\n        Object.entries(constants).map(([n, c]: [string, Complex]): Complex => (\n            multiply(\n                c,\n                exp(\n                    multiply(Number(n) * 2 * pi * t, complex(0, 1)) as Complex\n                )\n            )\n        ) as Complex)\n    )\n}"],"mappings":"8HAAA,OAASA,OAAT,CAA2BC,QAA3B,CAAqCC,GAArC,CAA0CC,EAA1C,KAAoD,QAApD,CACA,MAAOC,SAAP,KAAqB,YAArB,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,mBAAkB,CAAG,QAArBA,mBAAqB,CAACC,MAAD,CAA6D,CAC3F,MAAO,UAACC,CAAD,CAAe,CAClB,sCAAiBD,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWF,CAAC,EAAID,MAAM,CAACI,MAAP,CAAgB,CAApB,CAAZ,CAAD,CAAvB,IAAOC,EAAP,uBAAWC,EAAX,uBACA,MAAOZ,QAAO,CAACW,EAAD,CAAKC,EAAL,CAAd,CACH,CAHD,CAIH,CALM,CAOP;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAMC,0BAAyB,CAAG,QAA5BA,0BAA4B,CAACC,CAAD,CAAYC,CAAZ,CAAmD,CACjF,GAAMC,IAAG,CAAG,QAANA,IAAM,CAACT,CAAD,QACRN,SAAQ,CACJc,CAAC,CAACR,CAAD,CADG,CAEJL,GAAG,CACCD,QAAQ,CAACa,CAAC,CAAG,CAAJ,CAAQX,EAAR,CAAaI,CAAd,CAAiBP,OAAO,CAAC,CAAD,CAAI,CAAJ,CAAxB,CADT,CAFC,CADA,EAAZ,CAQA,GAAMiB,GAAE,CAAG,KAAX,CACA,MAAOb,SAAQ,CAAC,CAAD,CAAI,CAAJ,CAAOY,GAAP,CAAYC,EAAZ,CAAf,CACH,CAXD,CAaA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,qBAAoB,CAAG,QAAvBA,qBAAuB,CAACC,OAAD,CAAkBJ,CAAlB,CAAgD,CAChF,GAAIK,UAAoC,CAAG,EAA3C,CAEA,IACI,GAAIN,GAAC,CAAGN,IAAI,CAACC,KAAL,CAAW,CAACU,OAAD,CAAW,CAAtB,CADZ,CAEIL,EAAC,CAAGN,IAAI,CAACC,KAAL,CAAWU,OAAO,CAAG,CAArB,CAFR,CAGIL,EAAC,EAHL,CAIE,CACEM,SAAS,CAACN,EAAD,CAAT,CAAeD,yBAAyB,CAACC,EAAD,CAAIC,CAAJ,CAAxC,CACH,CAED,MAAO,UAACR,CAAD,QACHc,OAAM,CAACC,OAAP,CAAeF,SAAf,EAA0BG,GAA1B,CAA8B,gDAAET,CAAF,UAAKU,CAAL,gBAC1BvB,SAAQ,CACJuB,CADI,CAEJtB,GAAG,CACCD,QAAQ,CAACwB,MAAM,CAACX,CAAD,CAAN,CAAY,CAAZ,CAAgBX,EAAhB,CAAqBI,CAAtB,CAAyBP,OAAO,CAAC,CAAD,CAAI,CAAJ,CAAhC,CADT,CAFC,CADkB,EAA9B,CADG,EAAP,CAUH,CArBM"},"metadata":{},"sourceType":"module"}