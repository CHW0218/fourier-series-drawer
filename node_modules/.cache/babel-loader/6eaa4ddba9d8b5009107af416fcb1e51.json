{"ast":null,"code":"import { isArray, isBigNumber, isMatrix, isNumber, isRange } from '../../utils/is.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'index';\nvar dependencies = ['Index'];\nexport var createIndexTransform = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var Index = _ref.Index;\n  /**\n   * Attach a transform function to math.index\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a one-based index instead of a zero-based index\n   */\n\n  return function indexTransform() {\n    var args = [];\n\n    for (var i = 0, ii = arguments.length; i < ii; i++) {\n      var arg = arguments[i]; // change from one-based to zero based, and convert BigNumber to number\n\n      if (isRange(arg)) {\n        arg.start--;\n        arg.end -= arg.step > 0 ? 0 : 2;\n      } else if (arg && arg.isSet === true) {\n        arg = arg.map(function (v) {\n          return v - 1;\n        });\n      } else if (isArray(arg) || isMatrix(arg)) {\n        arg = arg.map(function (v) {\n          return v - 1;\n        });\n      } else if (isNumber(arg)) {\n        arg--;\n      } else if (isBigNumber(arg)) {\n        arg = arg.toNumber() - 1;\n      } else if (typeof arg === 'string') {// leave as is\n      } else {\n        throw new TypeError('Dimension must be an Array, Matrix, number, string, or Range');\n      }\n\n      args[i] = arg;\n    }\n\n    var res = new Index();\n    Index.apply(res, args);\n    return res;\n  };\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["isArray","isBigNumber","isMatrix","isNumber","isRange","factory","name","dependencies","createIndexTransform","_ref","Index","indexTransform","args","i","ii","arguments","length","arg","start","end","step","isSet","map","v","toNumber","TypeError","res","apply","isTransformFunction"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/expression/transform/index.transform.js"],"sourcesContent":["import { isArray, isBigNumber, isMatrix, isNumber, isRange } from '../../utils/is.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'index';\nvar dependencies = ['Index'];\nexport var createIndexTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    Index\n  } = _ref;\n\n  /**\n   * Attach a transform function to math.index\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a one-based index instead of a zero-based index\n   */\n  return function indexTransform() {\n    var args = [];\n\n    for (var i = 0, ii = arguments.length; i < ii; i++) {\n      var arg = arguments[i]; // change from one-based to zero based, and convert BigNumber to number\n\n      if (isRange(arg)) {\n        arg.start--;\n        arg.end -= arg.step > 0 ? 0 : 2;\n      } else if (arg && arg.isSet === true) {\n        arg = arg.map(function (v) {\n          return v - 1;\n        });\n      } else if (isArray(arg) || isMatrix(arg)) {\n        arg = arg.map(function (v) {\n          return v - 1;\n        });\n      } else if (isNumber(arg)) {\n        arg--;\n      } else if (isBigNumber(arg)) {\n        arg = arg.toNumber() - 1;\n      } else if (typeof arg === 'string') {// leave as is\n      } else {\n        throw new TypeError('Dimension must be an Array, Matrix, number, string, or Range');\n      }\n\n      args[i] = arg;\n    }\n\n    var res = new Index();\n    Index.apply(res, args);\n    return res;\n  };\n}, {\n  isTransformFunction: true\n});"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,QAA/B,EAAyCC,QAAzC,EAAmDC,OAAnD,QAAkE,mBAAlE;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,IAAIC,IAAI,GAAG,OAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,CAAnB;AACA,OAAO,IAAIC,oBAAoB,GAAG,eAAeH,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EACnF,IACEC,KADF,GAEID,IAFJ,CACEC,KADF;EAIA;AACF;AACA;AACA;AACA;AACA;;EACE,OAAO,SAASC,cAAT,GAA0B;IAC/B,IAAIC,IAAI,GAAG,EAAX;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGC,SAAS,CAACC,MAA/B,EAAuCH,CAAC,GAAGC,EAA3C,EAA+CD,CAAC,EAAhD,EAAoD;MAClD,IAAII,GAAG,GAAGF,SAAS,CAACF,CAAD,CAAnB,CADkD,CAC1B;;MAExB,IAAIT,OAAO,CAACa,GAAD,CAAX,EAAkB;QAChBA,GAAG,CAACC,KAAJ;QACAD,GAAG,CAACE,GAAJ,IAAWF,GAAG,CAACG,IAAJ,GAAW,CAAX,GAAe,CAAf,GAAmB,CAA9B;MACD,CAHD,MAGO,IAAIH,GAAG,IAAIA,GAAG,CAACI,KAAJ,KAAc,IAAzB,EAA+B;QACpCJ,GAAG,GAAGA,GAAG,CAACK,GAAJ,CAAQ,UAAUC,CAAV,EAAa;UACzB,OAAOA,CAAC,GAAG,CAAX;QACD,CAFK,CAAN;MAGD,CAJM,MAIA,IAAIvB,OAAO,CAACiB,GAAD,CAAP,IAAgBf,QAAQ,CAACe,GAAD,CAA5B,EAAmC;QACxCA,GAAG,GAAGA,GAAG,CAACK,GAAJ,CAAQ,UAAUC,CAAV,EAAa;UACzB,OAAOA,CAAC,GAAG,CAAX;QACD,CAFK,CAAN;MAGD,CAJM,MAIA,IAAIpB,QAAQ,CAACc,GAAD,CAAZ,EAAmB;QACxBA,GAAG;MACJ,CAFM,MAEA,IAAIhB,WAAW,CAACgB,GAAD,CAAf,EAAsB;QAC3BA,GAAG,GAAGA,GAAG,CAACO,QAAJ,KAAiB,CAAvB;MACD,CAFM,MAEA,IAAI,OAAOP,GAAP,KAAe,QAAnB,EAA6B,CAAC;MACpC,CADM,MACA;QACL,MAAM,IAAIQ,SAAJ,CAAc,8DAAd,CAAN;MACD;;MAEDb,IAAI,CAACC,CAAD,CAAJ,GAAUI,GAAV;IACD;;IAED,IAAIS,GAAG,GAAG,IAAIhB,KAAJ,EAAV;IACAA,KAAK,CAACiB,KAAN,CAAYD,GAAZ,EAAiBd,IAAjB;IACA,OAAOc,GAAP;EACD,CAhCD;AAiCD,CA5CuD,EA4CrD;EACDE,mBAAmB,EAAE;AADpB,CA5CqD,CAAjD"},"metadata":{},"sourceType":"module"}