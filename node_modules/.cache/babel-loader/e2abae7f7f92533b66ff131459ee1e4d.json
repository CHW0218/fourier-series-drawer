{"ast":null,"code":"/* eslint no-template-curly-in-string: \"off\" */\nimport escapeLatexLib from 'escape-latex';\nimport { hasOwnProperty } from './object.js';\nexport var latexSymbols = {\n  // GREEK LETTERS\n  Alpha: 'A',\n  alpha: '\\\\alpha',\n  Beta: 'B',\n  beta: '\\\\beta',\n  Gamma: '\\\\Gamma',\n  gamma: '\\\\gamma',\n  Delta: '\\\\Delta',\n  delta: '\\\\delta',\n  Epsilon: 'E',\n  epsilon: '\\\\epsilon',\n  varepsilon: '\\\\varepsilon',\n  Zeta: 'Z',\n  zeta: '\\\\zeta',\n  Eta: 'H',\n  eta: '\\\\eta',\n  Theta: '\\\\Theta',\n  theta: '\\\\theta',\n  vartheta: '\\\\vartheta',\n  Iota: 'I',\n  iota: '\\\\iota',\n  Kappa: 'K',\n  kappa: '\\\\kappa',\n  varkappa: '\\\\varkappa',\n  Lambda: '\\\\Lambda',\n  lambda: '\\\\lambda',\n  Mu: 'M',\n  mu: '\\\\mu',\n  Nu: 'N',\n  nu: '\\\\nu',\n  Xi: '\\\\Xi',\n  xi: '\\\\xi',\n  Omicron: 'O',\n  omicron: 'o',\n  Pi: '\\\\Pi',\n  pi: '\\\\pi',\n  varpi: '\\\\varpi',\n  Rho: 'P',\n  rho: '\\\\rho',\n  varrho: '\\\\varrho',\n  Sigma: '\\\\Sigma',\n  sigma: '\\\\sigma',\n  varsigma: '\\\\varsigma',\n  Tau: 'T',\n  tau: '\\\\tau',\n  Upsilon: \"\\\\Upsilon\",\n  upsilon: \"\\\\upsilon\",\n  Phi: '\\\\Phi',\n  phi: '\\\\phi',\n  varphi: '\\\\varphi',\n  Chi: 'X',\n  chi: '\\\\chi',\n  Psi: '\\\\Psi',\n  psi: '\\\\psi',\n  Omega: '\\\\Omega',\n  omega: '\\\\omega',\n  // logic\n  true: '\\\\mathrm{True}',\n  false: '\\\\mathrm{False}',\n  // other\n  i: 'i',\n  // TODO use \\i ??\n  inf: '\\\\infty',\n  Inf: '\\\\infty',\n  infinity: '\\\\infty',\n  Infinity: '\\\\infty',\n  oo: '\\\\infty',\n  lim: '\\\\lim',\n  undefined: '\\\\mathbf{?}'\n};\nexport var latexOperators = {\n  transpose: '^\\\\top',\n  ctranspose: '^H',\n  factorial: '!',\n  pow: '^',\n  dotPow: '.^\\\\wedge',\n  // TODO find ideal solution\n  unaryPlus: '+',\n  unaryMinus: '-',\n  bitNot: '\\\\~',\n  // TODO find ideal solution\n  not: '\\\\neg',\n  multiply: '\\\\cdot',\n  divide: '\\\\frac',\n  // TODO how to handle that properly?\n  dotMultiply: '.\\\\cdot',\n  // TODO find ideal solution\n  dotDivide: '.:',\n  // TODO find ideal solution\n  mod: '\\\\mod',\n  add: '+',\n  subtract: '-',\n  to: '\\\\rightarrow',\n  leftShift: '<<',\n  rightArithShift: '>>',\n  rightLogShift: '>>>',\n  equal: '=',\n  unequal: '\\\\neq',\n  smaller: '<',\n  larger: '>',\n  smallerEq: '\\\\leq',\n  largerEq: '\\\\geq',\n  bitAnd: '\\\\&',\n  bitXor: \"\\\\underline{|}\",\n  bitOr: '|',\n  and: '\\\\wedge',\n  xor: '\\\\veebar',\n  or: '\\\\vee'\n};\nexport var latexFunctions = {\n  // arithmetic\n  abs: {\n    1: '\\\\left|${args[0]}\\\\right|'\n  },\n  add: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.add, \"${args[1]}\\\\right)\")\n  },\n  cbrt: {\n    1: '\\\\sqrt[3]{${args[0]}}'\n  },\n  ceil: {\n    1: '\\\\left\\\\lceil${args[0]}\\\\right\\\\rceil'\n  },\n  cube: {\n    1: '\\\\left(${args[0]}\\\\right)^3'\n  },\n  divide: {\n    2: '\\\\frac{${args[0]}}{${args[1]}}'\n  },\n  dotDivide: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotDivide, \"${args[1]}\\\\right)\")\n  },\n  dotMultiply: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotMultiply, \"${args[1]}\\\\right)\")\n  },\n  dotPow: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotPow, \"${args[1]}\\\\right)\")\n  },\n  exp: {\n    1: '\\\\exp\\\\left(${args[0]}\\\\right)'\n  },\n  expm1: \"\\\\left(e\".concat(latexOperators.pow, \"{${args[0]}}-1\\\\right)\"),\n  fix: {\n    1: '\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)'\n  },\n  floor: {\n    1: '\\\\left\\\\lfloor${args[0]}\\\\right\\\\rfloor'\n  },\n  gcd: '\\\\gcd\\\\left(${args}\\\\right)',\n  hypot: '\\\\hypot\\\\left(${args}\\\\right)',\n  log: {\n    1: '\\\\ln\\\\left(${args[0]}\\\\right)',\n    2: '\\\\log_{${args[1]}}\\\\left(${args[0]}\\\\right)'\n  },\n  log10: {\n    1: '\\\\log_{10}\\\\left(${args[0]}\\\\right)'\n  },\n  log1p: {\n    1: '\\\\ln\\\\left(${args[0]}+1\\\\right)',\n    2: '\\\\log_{${args[1]}}\\\\left(${args[0]}+1\\\\right)'\n  },\n  log2: '\\\\log_{2}\\\\left(${args[0]}\\\\right)',\n  mod: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.mod, \"${args[1]}\\\\right)\")\n  },\n  multiply: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.multiply, \"${args[1]}\\\\right)\")\n  },\n  norm: {\n    1: '\\\\left\\\\|${args[0]}\\\\right\\\\|',\n    2: undefined // use default template\n\n  },\n  nthRoot: {\n    2: '\\\\sqrt[${args[1]}]{${args[0]}}'\n  },\n  nthRoots: {\n    2: '\\\\{y : $y^{args[1]} = {${args[0]}}\\\\}'\n  },\n  pow: {\n    2: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.pow, \"{${args[1]}}\")\n  },\n  round: {\n    1: '\\\\left\\\\lfloor${args[0]}\\\\right\\\\rceil',\n    2: undefined // use default template\n\n  },\n  sign: {\n    1: '\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)'\n  },\n  sqrt: {\n    1: '\\\\sqrt{${args[0]}}'\n  },\n  square: {\n    1: '\\\\left(${args[0]}\\\\right)^2'\n  },\n  subtract: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.subtract, \"${args[1]}\\\\right)\")\n  },\n  unaryMinus: {\n    1: \"\".concat(latexOperators.unaryMinus, \"\\\\left(${args[0]}\\\\right)\")\n  },\n  unaryPlus: {\n    1: \"\".concat(latexOperators.unaryPlus, \"\\\\left(${args[0]}\\\\right)\")\n  },\n  // bitwise\n  bitAnd: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitAnd, \"${args[1]}\\\\right)\")\n  },\n  bitNot: {\n    1: latexOperators.bitNot + '\\\\left(${args[0]}\\\\right)'\n  },\n  bitOr: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitOr, \"${args[1]}\\\\right)\")\n  },\n  bitXor: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitXor, \"${args[1]}\\\\right)\")\n  },\n  leftShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.leftShift, \"${args[1]}\\\\right)\")\n  },\n  rightArithShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.rightArithShift, \"${args[1]}\\\\right)\")\n  },\n  rightLogShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.rightLogShift, \"${args[1]}\\\\right)\")\n  },\n  // combinatorics\n  bellNumbers: {\n    1: '\\\\mathrm{B}_{${args[0]}}'\n  },\n  catalan: {\n    1: '\\\\mathrm{C}_{${args[0]}}'\n  },\n  stirlingS2: {\n    2: '\\\\mathrm{S}\\\\left(${args}\\\\right)'\n  },\n  // complex\n  arg: {\n    1: '\\\\arg\\\\left(${args[0]}\\\\right)'\n  },\n  conj: {\n    1: '\\\\left(${args[0]}\\\\right)^*'\n  },\n  im: {\n    1: '\\\\Im\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace'\n  },\n  re: {\n    1: '\\\\Re\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace'\n  },\n  // logical\n  and: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.and, \"${args[1]}\\\\right)\")\n  },\n  not: {\n    1: latexOperators.not + '\\\\left(${args[0]}\\\\right)'\n  },\n  or: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.or, \"${args[1]}\\\\right)\")\n  },\n  xor: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.xor, \"${args[1]}\\\\right)\")\n  },\n  // matrix\n  cross: {\n    2: '\\\\left(${args[0]}\\\\right)\\\\times\\\\left(${args[1]}\\\\right)'\n  },\n  ctranspose: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.ctranspose)\n  },\n  det: {\n    1: '\\\\det\\\\left(${args[0]}\\\\right)'\n  },\n  dot: {\n    2: '\\\\left(${args[0]}\\\\cdot${args[1]}\\\\right)'\n  },\n  expm: {\n    1: '\\\\exp\\\\left(${args[0]}\\\\right)'\n  },\n  inv: {\n    1: '\\\\left(${args[0]}\\\\right)^{-1}'\n  },\n  pinv: {\n    1: '\\\\left(${args[0]}\\\\right)^{+}'\n  },\n  sqrtm: {\n    1: \"{${args[0]}}\".concat(latexOperators.pow, \"{\\\\frac{1}{2}}\")\n  },\n  trace: {\n    1: '\\\\mathrm{tr}\\\\left(${args[0]}\\\\right)'\n  },\n  transpose: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.transpose)\n  },\n  // probability\n  combinations: {\n    2: '\\\\binom{${args[0]}}{${args[1]}}'\n  },\n  combinationsWithRep: {\n    2: '\\\\left(\\\\!\\\\!{\\\\binom{${args[0]}}{${args[1]}}}\\\\!\\\\!\\\\right)'\n  },\n  factorial: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.factorial)\n  },\n  gamma: {\n    1: '\\\\Gamma\\\\left(${args[0]}\\\\right)'\n  },\n  lgamma: {\n    1: '\\\\ln\\\\Gamma\\\\left(${args[0]}\\\\right)'\n  },\n  // relational\n  equal: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.equal, \"${args[1]}\\\\right)\")\n  },\n  larger: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.larger, \"${args[1]}\\\\right)\")\n  },\n  largerEq: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.largerEq, \"${args[1]}\\\\right)\")\n  },\n  smaller: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.smaller, \"${args[1]}\\\\right)\")\n  },\n  smallerEq: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.smallerEq, \"${args[1]}\\\\right)\")\n  },\n  unequal: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.unequal, \"${args[1]}\\\\right)\")\n  },\n  // special\n  erf: {\n    1: 'erf\\\\left(${args[0]}\\\\right)'\n  },\n  // statistics\n  max: '\\\\max\\\\left(${args}\\\\right)',\n  min: '\\\\min\\\\left(${args}\\\\right)',\n  variance: '\\\\mathrm{Var}\\\\left(${args}\\\\right)',\n  // trigonometry\n  acos: {\n    1: '\\\\cos^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acosh: {\n    1: '\\\\cosh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acot: {\n    1: '\\\\cot^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acoth: {\n    1: '\\\\coth^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acsc: {\n    1: '\\\\csc^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acsch: {\n    1: '\\\\mathrm{csch}^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asec: {\n    1: '\\\\sec^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asech: {\n    1: '\\\\mathrm{sech}^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asin: {\n    1: '\\\\sin^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asinh: {\n    1: '\\\\sinh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  atan: {\n    1: '\\\\tan^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  atan2: {\n    2: '\\\\mathrm{atan2}\\\\left(${args}\\\\right)'\n  },\n  atanh: {\n    1: '\\\\tanh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  cos: {\n    1: '\\\\cos\\\\left(${args[0]}\\\\right)'\n  },\n  cosh: {\n    1: '\\\\cosh\\\\left(${args[0]}\\\\right)'\n  },\n  cot: {\n    1: '\\\\cot\\\\left(${args[0]}\\\\right)'\n  },\n  coth: {\n    1: '\\\\coth\\\\left(${args[0]}\\\\right)'\n  },\n  csc: {\n    1: '\\\\csc\\\\left(${args[0]}\\\\right)'\n  },\n  csch: {\n    1: '\\\\mathrm{csch}\\\\left(${args[0]}\\\\right)'\n  },\n  sec: {\n    1: '\\\\sec\\\\left(${args[0]}\\\\right)'\n  },\n  sech: {\n    1: '\\\\mathrm{sech}\\\\left(${args[0]}\\\\right)'\n  },\n  sin: {\n    1: '\\\\sin\\\\left(${args[0]}\\\\right)'\n  },\n  sinh: {\n    1: '\\\\sinh\\\\left(${args[0]}\\\\right)'\n  },\n  tan: {\n    1: '\\\\tan\\\\left(${args[0]}\\\\right)'\n  },\n  tanh: {\n    1: '\\\\tanh\\\\left(${args[0]}\\\\right)'\n  },\n  // unit\n  to: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.to, \"${args[1]}\\\\right)\")\n  },\n  // utils\n  numeric: function numeric(node, options) {\n    // Not sure if this is strictly right but should work correctly for the vast majority of use cases.\n    return node.args[0].toTex();\n  },\n  // type\n  number: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)'\n  },\n  string: {\n    0: '\\\\mathtt{\"\"}',\n    1: '\\\\mathrm{string}\\\\left(${args[0]}\\\\right)'\n  },\n  bignumber: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)'\n  },\n  complex: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: \"\\\\left(\\\\left(${args[0]}\\\\right)+\".concat(latexSymbols.i, \"\\\\cdot\\\\left(${args[1]}\\\\right)\\\\right)\")\n  },\n  matrix: {\n    0: '\\\\begin{bmatrix}\\\\end{bmatrix}',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(${args[0]}\\\\right)'\n  },\n  sparse: {\n    0: '\\\\begin{bsparse}\\\\end{bsparse}',\n    1: '\\\\left(${args[0]}\\\\right)'\n  },\n  unit: {\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)'\n  }\n};\nexport var defaultTemplate = '\\\\mathrm{${name}}\\\\left(${args}\\\\right)';\nvar latexUnits = {\n  deg: '^\\\\circ'\n};\nexport function escapeLatex(string) {\n  return escapeLatexLib(string, {\n    preserveFormatting: true\n  });\n} // @param {string} name\n// @param {boolean} isUnit\n\nexport function toSymbol(name, isUnit) {\n  isUnit = typeof isUnit === 'undefined' ? false : isUnit;\n\n  if (isUnit) {\n    if (hasOwnProperty(latexUnits, name)) {\n      return latexUnits[name];\n    }\n\n    return '\\\\mathrm{' + escapeLatex(name) + '}';\n  }\n\n  if (hasOwnProperty(latexSymbols, name)) {\n    return latexSymbols[name];\n  }\n\n  return escapeLatex(name);\n}","map":{"version":3,"names":["escapeLatexLib","hasOwnProperty","latexSymbols","Alpha","alpha","Beta","beta","Gamma","gamma","Delta","delta","Epsilon","epsilon","varepsilon","Zeta","zeta","Eta","eta","Theta","theta","vartheta","Iota","iota","Kappa","kappa","varkappa","Lambda","lambda","Mu","mu","Nu","nu","Xi","xi","Omicron","omicron","Pi","pi","varpi","Rho","rho","varrho","Sigma","sigma","varsigma","Tau","tau","Upsilon","upsilon","Phi","phi","varphi","Chi","chi","Psi","psi","Omega","omega","true","false","i","inf","Inf","infinity","Infinity","oo","lim","undefined","latexOperators","transpose","ctranspose","factorial","pow","dotPow","unaryPlus","unaryMinus","bitNot","not","multiply","divide","dotMultiply","dotDivide","mod","add","subtract","to","leftShift","rightArithShift","rightLogShift","equal","unequal","smaller","larger","smallerEq","largerEq","bitAnd","bitXor","bitOr","and","xor","or","latexFunctions","abs","concat","cbrt","ceil","cube","exp","expm1","fix","floor","gcd","hypot","log","log10","log1p","log2","norm","nthRoot","nthRoots","round","sign","sqrt","square","bellNumbers","catalan","stirlingS2","arg","conj","im","re","cross","det","dot","expm","inv","pinv","sqrtm","trace","combinations","combinationsWithRep","lgamma","erf","max","min","variance","acos","acosh","acot","acoth","acsc","acsch","asec","asech","asin","asinh","atan","atan2","atanh","cos","cosh","cot","coth","csc","csch","sec","sech","sin","sinh","tan","tanh","numeric","node","options","args","toTex","number","string","bignumber","complex","matrix","sparse","unit","defaultTemplate","latexUnits","deg","escapeLatex","preserveFormatting","toSymbol","name","isUnit"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/utils/latex.js"],"sourcesContent":["/* eslint no-template-curly-in-string: \"off\" */\nimport escapeLatexLib from 'escape-latex';\nimport { hasOwnProperty } from './object.js';\nexport var latexSymbols = {\n  // GREEK LETTERS\n  Alpha: 'A',\n  alpha: '\\\\alpha',\n  Beta: 'B',\n  beta: '\\\\beta',\n  Gamma: '\\\\Gamma',\n  gamma: '\\\\gamma',\n  Delta: '\\\\Delta',\n  delta: '\\\\delta',\n  Epsilon: 'E',\n  epsilon: '\\\\epsilon',\n  varepsilon: '\\\\varepsilon',\n  Zeta: 'Z',\n  zeta: '\\\\zeta',\n  Eta: 'H',\n  eta: '\\\\eta',\n  Theta: '\\\\Theta',\n  theta: '\\\\theta',\n  vartheta: '\\\\vartheta',\n  Iota: 'I',\n  iota: '\\\\iota',\n  Kappa: 'K',\n  kappa: '\\\\kappa',\n  varkappa: '\\\\varkappa',\n  Lambda: '\\\\Lambda',\n  lambda: '\\\\lambda',\n  Mu: 'M',\n  mu: '\\\\mu',\n  Nu: 'N',\n  nu: '\\\\nu',\n  Xi: '\\\\Xi',\n  xi: '\\\\xi',\n  Omicron: 'O',\n  omicron: 'o',\n  Pi: '\\\\Pi',\n  pi: '\\\\pi',\n  varpi: '\\\\varpi',\n  Rho: 'P',\n  rho: '\\\\rho',\n  varrho: '\\\\varrho',\n  Sigma: '\\\\Sigma',\n  sigma: '\\\\sigma',\n  varsigma: '\\\\varsigma',\n  Tau: 'T',\n  tau: '\\\\tau',\n  Upsilon: '\\\\Upsilon',\n  upsilon: '\\\\upsilon',\n  Phi: '\\\\Phi',\n  phi: '\\\\phi',\n  varphi: '\\\\varphi',\n  Chi: 'X',\n  chi: '\\\\chi',\n  Psi: '\\\\Psi',\n  psi: '\\\\psi',\n  Omega: '\\\\Omega',\n  omega: '\\\\omega',\n  // logic\n  true: '\\\\mathrm{True}',\n  false: '\\\\mathrm{False}',\n  // other\n  i: 'i',\n  // TODO use \\i ??\n  inf: '\\\\infty',\n  Inf: '\\\\infty',\n  infinity: '\\\\infty',\n  Infinity: '\\\\infty',\n  oo: '\\\\infty',\n  lim: '\\\\lim',\n  undefined: '\\\\mathbf{?}'\n};\nexport var latexOperators = {\n  transpose: '^\\\\top',\n  ctranspose: '^H',\n  factorial: '!',\n  pow: '^',\n  dotPow: '.^\\\\wedge',\n  // TODO find ideal solution\n  unaryPlus: '+',\n  unaryMinus: '-',\n  bitNot: '\\\\~',\n  // TODO find ideal solution\n  not: '\\\\neg',\n  multiply: '\\\\cdot',\n  divide: '\\\\frac',\n  // TODO how to handle that properly?\n  dotMultiply: '.\\\\cdot',\n  // TODO find ideal solution\n  dotDivide: '.:',\n  // TODO find ideal solution\n  mod: '\\\\mod',\n  add: '+',\n  subtract: '-',\n  to: '\\\\rightarrow',\n  leftShift: '<<',\n  rightArithShift: '>>',\n  rightLogShift: '>>>',\n  equal: '=',\n  unequal: '\\\\neq',\n  smaller: '<',\n  larger: '>',\n  smallerEq: '\\\\leq',\n  largerEq: '\\\\geq',\n  bitAnd: '\\\\&',\n  bitXor: '\\\\underline{|}',\n  bitOr: '|',\n  and: '\\\\wedge',\n  xor: '\\\\veebar',\n  or: '\\\\vee'\n};\nexport var latexFunctions = {\n  // arithmetic\n  abs: {\n    1: '\\\\left|${args[0]}\\\\right|'\n  },\n  add: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.add, \"${args[1]}\\\\right)\")\n  },\n  cbrt: {\n    1: '\\\\sqrt[3]{${args[0]}}'\n  },\n  ceil: {\n    1: '\\\\left\\\\lceil${args[0]}\\\\right\\\\rceil'\n  },\n  cube: {\n    1: '\\\\left(${args[0]}\\\\right)^3'\n  },\n  divide: {\n    2: '\\\\frac{${args[0]}}{${args[1]}}'\n  },\n  dotDivide: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotDivide, \"${args[1]}\\\\right)\")\n  },\n  dotMultiply: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotMultiply, \"${args[1]}\\\\right)\")\n  },\n  dotPow: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotPow, \"${args[1]}\\\\right)\")\n  },\n  exp: {\n    1: '\\\\exp\\\\left(${args[0]}\\\\right)'\n  },\n  expm1: \"\\\\left(e\".concat(latexOperators.pow, \"{${args[0]}}-1\\\\right)\"),\n  fix: {\n    1: '\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)'\n  },\n  floor: {\n    1: '\\\\left\\\\lfloor${args[0]}\\\\right\\\\rfloor'\n  },\n  gcd: '\\\\gcd\\\\left(${args}\\\\right)',\n  hypot: '\\\\hypot\\\\left(${args}\\\\right)',\n  log: {\n    1: '\\\\ln\\\\left(${args[0]}\\\\right)',\n    2: '\\\\log_{${args[1]}}\\\\left(${args[0]}\\\\right)'\n  },\n  log10: {\n    1: '\\\\log_{10}\\\\left(${args[0]}\\\\right)'\n  },\n  log1p: {\n    1: '\\\\ln\\\\left(${args[0]}+1\\\\right)',\n    2: '\\\\log_{${args[1]}}\\\\left(${args[0]}+1\\\\right)'\n  },\n  log2: '\\\\log_{2}\\\\left(${args[0]}\\\\right)',\n  mod: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.mod, \"${args[1]}\\\\right)\")\n  },\n  multiply: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.multiply, \"${args[1]}\\\\right)\")\n  },\n  norm: {\n    1: '\\\\left\\\\|${args[0]}\\\\right\\\\|',\n    2: undefined // use default template\n\n  },\n  nthRoot: {\n    2: '\\\\sqrt[${args[1]}]{${args[0]}}'\n  },\n  nthRoots: {\n    2: '\\\\{y : $y^{args[1]} = {${args[0]}}\\\\}'\n  },\n  pow: {\n    2: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.pow, \"{${args[1]}}\")\n  },\n  round: {\n    1: '\\\\left\\\\lfloor${args[0]}\\\\right\\\\rceil',\n    2: undefined // use default template\n\n  },\n  sign: {\n    1: '\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)'\n  },\n  sqrt: {\n    1: '\\\\sqrt{${args[0]}}'\n  },\n  square: {\n    1: '\\\\left(${args[0]}\\\\right)^2'\n  },\n  subtract: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.subtract, \"${args[1]}\\\\right)\")\n  },\n  unaryMinus: {\n    1: \"\".concat(latexOperators.unaryMinus, \"\\\\left(${args[0]}\\\\right)\")\n  },\n  unaryPlus: {\n    1: \"\".concat(latexOperators.unaryPlus, \"\\\\left(${args[0]}\\\\right)\")\n  },\n  // bitwise\n  bitAnd: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitAnd, \"${args[1]}\\\\right)\")\n  },\n  bitNot: {\n    1: latexOperators.bitNot + '\\\\left(${args[0]}\\\\right)'\n  },\n  bitOr: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitOr, \"${args[1]}\\\\right)\")\n  },\n  bitXor: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitXor, \"${args[1]}\\\\right)\")\n  },\n  leftShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.leftShift, \"${args[1]}\\\\right)\")\n  },\n  rightArithShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.rightArithShift, \"${args[1]}\\\\right)\")\n  },\n  rightLogShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.rightLogShift, \"${args[1]}\\\\right)\")\n  },\n  // combinatorics\n  bellNumbers: {\n    1: '\\\\mathrm{B}_{${args[0]}}'\n  },\n  catalan: {\n    1: '\\\\mathrm{C}_{${args[0]}}'\n  },\n  stirlingS2: {\n    2: '\\\\mathrm{S}\\\\left(${args}\\\\right)'\n  },\n  // complex\n  arg: {\n    1: '\\\\arg\\\\left(${args[0]}\\\\right)'\n  },\n  conj: {\n    1: '\\\\left(${args[0]}\\\\right)^*'\n  },\n  im: {\n    1: '\\\\Im\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace'\n  },\n  re: {\n    1: '\\\\Re\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace'\n  },\n  // logical\n  and: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.and, \"${args[1]}\\\\right)\")\n  },\n  not: {\n    1: latexOperators.not + '\\\\left(${args[0]}\\\\right)'\n  },\n  or: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.or, \"${args[1]}\\\\right)\")\n  },\n  xor: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.xor, \"${args[1]}\\\\right)\")\n  },\n  // matrix\n  cross: {\n    2: '\\\\left(${args[0]}\\\\right)\\\\times\\\\left(${args[1]}\\\\right)'\n  },\n  ctranspose: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.ctranspose)\n  },\n  det: {\n    1: '\\\\det\\\\left(${args[0]}\\\\right)'\n  },\n  dot: {\n    2: '\\\\left(${args[0]}\\\\cdot${args[1]}\\\\right)'\n  },\n  expm: {\n    1: '\\\\exp\\\\left(${args[0]}\\\\right)'\n  },\n  inv: {\n    1: '\\\\left(${args[0]}\\\\right)^{-1}'\n  },\n  pinv: {\n    1: '\\\\left(${args[0]}\\\\right)^{+}'\n  },\n  sqrtm: {\n    1: \"{${args[0]}}\".concat(latexOperators.pow, \"{\\\\frac{1}{2}}\")\n  },\n  trace: {\n    1: '\\\\mathrm{tr}\\\\left(${args[0]}\\\\right)'\n  },\n  transpose: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.transpose)\n  },\n  // probability\n  combinations: {\n    2: '\\\\binom{${args[0]}}{${args[1]}}'\n  },\n  combinationsWithRep: {\n    2: '\\\\left(\\\\!\\\\!{\\\\binom{${args[0]}}{${args[1]}}}\\\\!\\\\!\\\\right)'\n  },\n  factorial: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.factorial)\n  },\n  gamma: {\n    1: '\\\\Gamma\\\\left(${args[0]}\\\\right)'\n  },\n  lgamma: {\n    1: '\\\\ln\\\\Gamma\\\\left(${args[0]}\\\\right)'\n  },\n  // relational\n  equal: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.equal, \"${args[1]}\\\\right)\")\n  },\n  larger: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.larger, \"${args[1]}\\\\right)\")\n  },\n  largerEq: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.largerEq, \"${args[1]}\\\\right)\")\n  },\n  smaller: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.smaller, \"${args[1]}\\\\right)\")\n  },\n  smallerEq: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.smallerEq, \"${args[1]}\\\\right)\")\n  },\n  unequal: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.unequal, \"${args[1]}\\\\right)\")\n  },\n  // special\n  erf: {\n    1: 'erf\\\\left(${args[0]}\\\\right)'\n  },\n  // statistics\n  max: '\\\\max\\\\left(${args}\\\\right)',\n  min: '\\\\min\\\\left(${args}\\\\right)',\n  variance: '\\\\mathrm{Var}\\\\left(${args}\\\\right)',\n  // trigonometry\n  acos: {\n    1: '\\\\cos^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acosh: {\n    1: '\\\\cosh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acot: {\n    1: '\\\\cot^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acoth: {\n    1: '\\\\coth^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acsc: {\n    1: '\\\\csc^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acsch: {\n    1: '\\\\mathrm{csch}^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asec: {\n    1: '\\\\sec^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asech: {\n    1: '\\\\mathrm{sech}^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asin: {\n    1: '\\\\sin^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asinh: {\n    1: '\\\\sinh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  atan: {\n    1: '\\\\tan^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  atan2: {\n    2: '\\\\mathrm{atan2}\\\\left(${args}\\\\right)'\n  },\n  atanh: {\n    1: '\\\\tanh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  cos: {\n    1: '\\\\cos\\\\left(${args[0]}\\\\right)'\n  },\n  cosh: {\n    1: '\\\\cosh\\\\left(${args[0]}\\\\right)'\n  },\n  cot: {\n    1: '\\\\cot\\\\left(${args[0]}\\\\right)'\n  },\n  coth: {\n    1: '\\\\coth\\\\left(${args[0]}\\\\right)'\n  },\n  csc: {\n    1: '\\\\csc\\\\left(${args[0]}\\\\right)'\n  },\n  csch: {\n    1: '\\\\mathrm{csch}\\\\left(${args[0]}\\\\right)'\n  },\n  sec: {\n    1: '\\\\sec\\\\left(${args[0]}\\\\right)'\n  },\n  sech: {\n    1: '\\\\mathrm{sech}\\\\left(${args[0]}\\\\right)'\n  },\n  sin: {\n    1: '\\\\sin\\\\left(${args[0]}\\\\right)'\n  },\n  sinh: {\n    1: '\\\\sinh\\\\left(${args[0]}\\\\right)'\n  },\n  tan: {\n    1: '\\\\tan\\\\left(${args[0]}\\\\right)'\n  },\n  tanh: {\n    1: '\\\\tanh\\\\left(${args[0]}\\\\right)'\n  },\n  // unit\n  to: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.to, \"${args[1]}\\\\right)\")\n  },\n  // utils\n  numeric: function numeric(node, options) {\n    // Not sure if this is strictly right but should work correctly for the vast majority of use cases.\n    return node.args[0].toTex();\n  },\n  // type\n  number: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)'\n  },\n  string: {\n    0: '\\\\mathtt{\"\"}',\n    1: '\\\\mathrm{string}\\\\left(${args[0]}\\\\right)'\n  },\n  bignumber: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)'\n  },\n  complex: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: \"\\\\left(\\\\left(${args[0]}\\\\right)+\".concat(latexSymbols.i, \"\\\\cdot\\\\left(${args[1]}\\\\right)\\\\right)\")\n  },\n  matrix: {\n    0: '\\\\begin{bmatrix}\\\\end{bmatrix}',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(${args[0]}\\\\right)'\n  },\n  sparse: {\n    0: '\\\\begin{bsparse}\\\\end{bsparse}',\n    1: '\\\\left(${args[0]}\\\\right)'\n  },\n  unit: {\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)'\n  }\n};\nexport var defaultTemplate = '\\\\mathrm{${name}}\\\\left(${args}\\\\right)';\nvar latexUnits = {\n  deg: '^\\\\circ'\n};\nexport function escapeLatex(string) {\n  return escapeLatexLib(string, {\n    preserveFormatting: true\n  });\n} // @param {string} name\n// @param {boolean} isUnit\n\nexport function toSymbol(name, isUnit) {\n  isUnit = typeof isUnit === 'undefined' ? false : isUnit;\n\n  if (isUnit) {\n    if (hasOwnProperty(latexUnits, name)) {\n      return latexUnits[name];\n    }\n\n    return '\\\\mathrm{' + escapeLatex(name) + '}';\n  }\n\n  if (hasOwnProperty(latexSymbols, name)) {\n    return latexSymbols[name];\n  }\n\n  return escapeLatex(name);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}