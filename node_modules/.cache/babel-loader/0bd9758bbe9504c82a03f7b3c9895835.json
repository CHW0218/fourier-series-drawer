{"ast":null,"code":"import { compareText as _compareText } from '../../utils/string.js';\nimport { factory } from '../../utils/factory.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nvar name = 'compareText';\nvar dependencies = ['typed', 'matrix'];\nexport var createCompareText = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix;\n  var algorithm13 = createAlgorithm13({\n    typed: typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed: typed\n  });\n  /**\n   * Compare two strings lexically. Comparison is case sensitive.\n   * Returns 1 when x > y, -1 when x < y, and 0 when x == y.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.compareText(x, y)\n   *\n   * Examples:\n   *\n   *    math.compareText('B', 'A')     // returns 1\n   *    math.compareText('2', '10')    // returns 1\n   *    math.compare('2', '10')        // returns -1\n   *    math.compareNatural('2', '10') // returns -1\n   *\n   *    math.compareText('B', ['A', 'B', 'C']) // returns [1, 0, -1]\n   *\n   * See also:\n   *\n   *    equal, equalText, compare, compareNatural\n   *\n   * @param  {string | Array | DenseMatrix} x First string to compare\n   * @param  {string | Array | DenseMatrix} y Second string to compare\n   * @return {number | Array | DenseMatrix} Returns the result of the comparison:\n   *                                        1 when x > y, -1 when x < y, and 0 when x == y.\n   */\n\n  return typed(name, {\n    'any, any': _compareText,\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, _compareText);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, _compareText, false);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, _compareText, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _compareText, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _compareText, true).valueOf();\n    }\n  });\n});\nexport var createCompareTextNumber = /* #__PURE__ */factory(name, ['typed'], function (_ref2) {\n  var typed = _ref2.typed;\n  return typed(name, {\n    'any, any': _compareText\n  });\n});","map":{"version":3,"names":["compareText","_compareText","factory","createAlgorithm14","createAlgorithm13","name","dependencies","createCompareText","_ref","typed","matrix","algorithm13","algorithm14","DenseMatrixDenseMatrix","x","y","ArrayArray","valueOf","ArrayMatrix","MatrixArray","DenseMatrixAny","anyDenseMatrix","ArrayAny","anyArray","createCompareTextNumber","_ref2"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/function/relational/compareText.js"],"sourcesContent":["import { compareText as _compareText } from '../../utils/string.js';\nimport { factory } from '../../utils/factory.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nvar name = 'compareText';\nvar dependencies = ['typed', 'matrix'];\nexport var createCompareText = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Compare two strings lexically. Comparison is case sensitive.\n   * Returns 1 when x > y, -1 when x < y, and 0 when x == y.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.compareText(x, y)\n   *\n   * Examples:\n   *\n   *    math.compareText('B', 'A')     // returns 1\n   *    math.compareText('2', '10')    // returns 1\n   *    math.compare('2', '10')        // returns -1\n   *    math.compareNatural('2', '10') // returns -1\n   *\n   *    math.compareText('B', ['A', 'B', 'C']) // returns [1, 0, -1]\n   *\n   * See also:\n   *\n   *    equal, equalText, compare, compareNatural\n   *\n   * @param  {string | Array | DenseMatrix} x First string to compare\n   * @param  {string | Array | DenseMatrix} y Second string to compare\n   * @return {number | Array | DenseMatrix} Returns the result of the comparison:\n   *                                        1 when x > y, -1 when x < y, and 0 when x == y.\n   */\n\n  return typed(name, {\n    'any, any': _compareText,\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, _compareText);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, _compareText, false);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, _compareText, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _compareText, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _compareText, true).valueOf();\n    }\n  });\n});\nexport var createCompareTextNumber = /* #__PURE__ */factory(name, ['typed'], _ref2 => {\n  var {\n    typed\n  } = _ref2;\n  return typed(name, {\n    'any, any': _compareText\n  });\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}