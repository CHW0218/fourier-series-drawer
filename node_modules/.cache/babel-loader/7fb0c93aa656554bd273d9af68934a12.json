{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { createAlgorithm02 } from '../../type/matrix/utils/algorithm02.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm09 } from '../../type/matrix/utils/algorithm09.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'atan2';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nexport var createAtan2 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      BigNumber = _ref.BigNumber,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm02 = createAlgorithm02({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm03 = createAlgorithm03({\n    typed: typed\n  });\n  var algorithm09 = createAlgorithm09({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = createAlgorithm11({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = createAlgorithm12({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed: typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed: typed\n  });\n  /**\n   * Calculate the inverse tangent function with two arguments, y/x.\n   * By providing two arguments, the right quadrant of the computed angle can be\n   * determined.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan2(y, x)\n   *\n   * Examples:\n   *\n   *    math.atan2(2, 2) / math.pi       // returns number 0.25\n   *\n   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg\n   *    const x = math.cos(angle)\n   *    const y = math.sin(angle)\n   *\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, atan, sin, cos\n   *\n   * @param {number | Array | Matrix} y  Second dimension\n   * @param {number | Array | Matrix} x  First dimension\n   * @return {number | Array | Matrix} Four-quadrant inverse tangent\n   */\n\n  return typed(name, {\n    'number, number': Math.atan2,\n    // Complex numbers doesn't seem to have a reasonable implementation of\n    // atan2(). Even Matlab removed the support, after they only calculated\n    // the atan only on base of the real part of the numbers and ignored the imaginary.\n    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {\n      return BigNumber.atan2(y, x);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      // mind the order of y and x!\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm12(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});","map":{"version":3,"names":["factory","createAlgorithm02","createAlgorithm03","createAlgorithm09","createAlgorithm11","createAlgorithm12","createAlgorithm13","createAlgorithm14","name","dependencies","createAtan2","_ref","typed","matrix","equalScalar","BigNumber","DenseMatrix","algorithm02","algorithm03","algorithm09","algorithm11","algorithm12","algorithm13","algorithm14","Math","atan2","BigNumberBigNumber","y","x","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixNumberBigNumber","DenseMatrixNumberBigNumber","numberBigNumberSparseMatrix","numberBigNumberDenseMatrix","ArrayNumberBigNumber","numberBigNumberArray"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/function/trigonometry/atan2.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { createAlgorithm02 } from '../../type/matrix/utils/algorithm02.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm09 } from '../../type/matrix/utils/algorithm09.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'atan2';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nexport var createAtan2 = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    BigNumber,\n    DenseMatrix\n  } = _ref;\n  var algorithm02 = createAlgorithm02({\n    typed,\n    equalScalar\n  });\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm09 = createAlgorithm09({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = createAlgorithm11({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Calculate the inverse tangent function with two arguments, y/x.\n   * By providing two arguments, the right quadrant of the computed angle can be\n   * determined.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan2(y, x)\n   *\n   * Examples:\n   *\n   *    math.atan2(2, 2) / math.pi       // returns number 0.25\n   *\n   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg\n   *    const x = math.cos(angle)\n   *    const y = math.sin(angle)\n   *\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, atan, sin, cos\n   *\n   * @param {number | Array | Matrix} y  Second dimension\n   * @param {number | Array | Matrix} x  First dimension\n   * @return {number | Array | Matrix} Four-quadrant inverse tangent\n   */\n\n  return typed(name, {\n    'number, number': Math.atan2,\n    // Complex numbers doesn't seem to have a reasonable implementation of\n    // atan2(). Even Matlab removed the support, after they only calculated\n    // the atan only on base of the real part of the numbers and ignored the imaginary.\n    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {\n      return BigNumber.atan2(y, x);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      // mind the order of y and x!\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm12(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}