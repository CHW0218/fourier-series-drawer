{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createVariance } from '../../function/statistics/variance.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'variance';\nvar dependencies = ['typed', 'add', 'subtract', 'multiply', 'divide', 'apply', 'isNaN'];\n/**\n * Attach a transform function to math.var\n * Adds a property transform containing the transform function.\n *\n * This transform changed the `dim` parameter of function var\n * from one-based to zero based\n */\n\nexport var createVarianceTransform = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      add = _ref.add,\n      subtract = _ref.subtract,\n      multiply = _ref.multiply,\n      divide = _ref.divide,\n      apply = _ref.apply,\n      isNaN = _ref.isNaN;\n  var variance = createVariance({\n    typed: typed,\n    add: add,\n    subtract: subtract,\n    multiply: multiply,\n    divide: divide,\n    apply: apply,\n    isNaN: isNaN\n  });\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return variance.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","errorTransform","createVariance","lastDimToZeroBase","name","dependencies","createVarianceTransform","_ref","typed","add","subtract","multiply","divide","apply","isNaN","variance","any","args","err","isTransformFunction"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/expression/transform/variance.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createVariance } from '../../function/statistics/variance.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'variance';\nvar dependencies = ['typed', 'add', 'subtract', 'multiply', 'divide', 'apply', 'isNaN'];\n/**\n * Attach a transform function to math.var\n * Adds a property transform containing the transform function.\n *\n * This transform changed the `dim` parameter of function var\n * from one-based to zero based\n */\n\nexport var createVarianceTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    subtract,\n    multiply,\n    divide,\n    apply,\n    isNaN\n  } = _ref;\n  var variance = createVariance({\n    typed,\n    add,\n    subtract,\n    multiply,\n    divide,\n    apply,\n    isNaN\n  });\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return variance.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,IAAIC,IAAI,GAAG,UAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,UAAjB,EAA6B,UAA7B,EAAyC,QAAzC,EAAmD,OAAnD,EAA4D,OAA5D,CAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,uBAAuB,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EACtF,IACEC,KADF,GAQID,IARJ,CACEC,KADF;EAAA,IAEEC,GAFF,GAQIF,IARJ,CAEEE,GAFF;EAAA,IAGEC,QAHF,GAQIH,IARJ,CAGEG,QAHF;EAAA,IAIEC,QAJF,GAQIJ,IARJ,CAIEI,QAJF;EAAA,IAKEC,MALF,GAQIL,IARJ,CAKEK,MALF;EAAA,IAMEC,KANF,GAQIN,IARJ,CAMEM,KANF;EAAA,IAOEC,KAPF,GAQIP,IARJ,CAOEO,KAPF;EASA,IAAIC,QAAQ,GAAGb,cAAc,CAAC;IAC5BM,KAAK,EAALA,KAD4B;IAE5BC,GAAG,EAAHA,GAF4B;IAG5BC,QAAQ,EAARA,QAH4B;IAI5BC,QAAQ,EAARA,QAJ4B;IAK5BC,MAAM,EAANA,MAL4B;IAM5BC,KAAK,EAALA,KAN4B;IAO5BC,KAAK,EAALA;EAP4B,CAAD,CAA7B;EASA,OAAON,KAAK,CAACJ,IAAD,EAAO;IACjB,UAAU,SAASY,GAAT,CAAaC,IAAb,EAAmB;MAC3BA,IAAI,GAAGd,iBAAiB,CAACc,IAAD,CAAxB;;MAEA,IAAI;QACF,OAAOF,QAAQ,CAACF,KAAT,CAAe,IAAf,EAAqBI,IAArB,CAAP;MACD,CAFD,CAEE,OAAOC,GAAP,EAAY;QACZ,MAAMjB,cAAc,CAACiB,GAAD,CAApB;MACD;IACF;EATgB,CAAP,CAAZ;AAWD,CA9B0D,EA8BxD;EACDC,mBAAmB,EAAE;AADpB,CA9BwD,CAApD"},"metadata":{},"sourceType":"module"}