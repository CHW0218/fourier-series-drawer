{"ast":null,"code":"/**\n * Keeps entries in the matrix when the callback function returns true, removes the entry otherwise\n *\n * @param {Matrix}   a              The sparse matrix\n * @param {function} callback       The callback function, function will be invoked with the following args:\n *                                    - The entry row\n *                                    - The entry column\n *                                    - The entry value\n *                                    - The state parameter\n * @param {any}      other          The state\n *\n * @return                          The number of nonzero elements in the matrix\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nexport function csFkeep(a, callback, other) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr;\n  var asize = a._size; // columns\n\n  var n = asize[1]; // nonzero items\n\n  var nz = 0; // loop columns\n\n  for (var j = 0; j < n; j++) {\n    // get current location of col j\n    var p = aptr[j]; // record new location of col j\n\n    aptr[j] = nz;\n\n    for (; p < aptr[j + 1]; p++) {\n      // check we need to keep this item\n      if (callback(aindex[p], j, avalues ? avalues[p] : 1, other)) {\n        // keep A(i,j)\n        aindex[nz] = aindex[p]; // check we need to process values (pattern only)\n\n        if (avalues) {\n          avalues[nz] = avalues[p];\n        } // increment nonzero items\n\n\n        nz++;\n      }\n    }\n  } // finalize A\n\n\n  aptr[n] = nz; // trim arrays\n\n  aindex.splice(nz, aindex.length - nz); // check we need to process values (pattern only)\n\n  if (avalues) {\n    avalues.splice(nz, avalues.length - nz);\n  } // return number of nonzero items\n\n\n  return nz;\n}","map":{"version":3,"names":["csFkeep","a","callback","other","avalues","_values","aindex","_index","aptr","_ptr","asize","_size","n","nz","j","p","splice","length"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/function/algebra/sparse/csFkeep.js"],"sourcesContent":["/**\n * Keeps entries in the matrix when the callback function returns true, removes the entry otherwise\n *\n * @param {Matrix}   a              The sparse matrix\n * @param {function} callback       The callback function, function will be invoked with the following args:\n *                                    - The entry row\n *                                    - The entry column\n *                                    - The entry value\n *                                    - The state parameter\n * @param {any}      other          The state\n *\n * @return                          The number of nonzero elements in the matrix\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nexport function csFkeep(a, callback, other) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr;\n  var asize = a._size; // columns\n\n  var n = asize[1]; // nonzero items\n\n  var nz = 0; // loop columns\n\n  for (var j = 0; j < n; j++) {\n    // get current location of col j\n    var p = aptr[j]; // record new location of col j\n\n    aptr[j] = nz;\n\n    for (; p < aptr[j + 1]; p++) {\n      // check we need to keep this item\n      if (callback(aindex[p], j, avalues ? avalues[p] : 1, other)) {\n        // keep A(i,j)\n        aindex[nz] = aindex[p]; // check we need to process values (pattern only)\n\n        if (avalues) {\n          avalues[nz] = avalues[p];\n        } // increment nonzero items\n\n\n        nz++;\n      }\n    }\n  } // finalize A\n\n\n  aptr[n] = nz; // trim arrays\n\n  aindex.splice(nz, aindex.length - nz); // check we need to process values (pattern only)\n\n  if (avalues) {\n    avalues.splice(nz, avalues.length - nz);\n  } // return number of nonzero items\n\n\n  return nz;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,OAAT,CAAiBC,CAAjB,EAAoBC,QAApB,EAA8BC,KAA9B,EAAqC;EAC1C;EACA,IAAIC,OAAO,GAAGH,CAAC,CAACI,OAAhB;EACA,IAAIC,MAAM,GAAGL,CAAC,CAACM,MAAf;EACA,IAAIC,IAAI,GAAGP,CAAC,CAACQ,IAAb;EACA,IAAIC,KAAK,GAAGT,CAAC,CAACU,KAAd,CAL0C,CAKrB;;EAErB,IAAIC,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAb,CAP0C,CAOxB;;EAElB,IAAIG,EAAE,GAAG,CAAT,CAT0C,CAS9B;;EAEZ,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;IAC1B;IACA,IAAIC,CAAC,GAAGP,IAAI,CAACM,CAAD,CAAZ,CAF0B,CAET;;IAEjBN,IAAI,CAACM,CAAD,CAAJ,GAAUD,EAAV;;IAEA,OAAOE,CAAC,GAAGP,IAAI,CAACM,CAAC,GAAG,CAAL,CAAf,EAAwBC,CAAC,EAAzB,EAA6B;MAC3B;MACA,IAAIb,QAAQ,CAACI,MAAM,CAACS,CAAD,CAAP,EAAYD,CAAZ,EAAeV,OAAO,GAAGA,OAAO,CAACW,CAAD,CAAV,GAAgB,CAAtC,EAAyCZ,KAAzC,CAAZ,EAA6D;QAC3D;QACAG,MAAM,CAACO,EAAD,CAAN,GAAaP,MAAM,CAACS,CAAD,CAAnB,CAF2D,CAEnC;;QAExB,IAAIX,OAAJ,EAAa;UACXA,OAAO,CAACS,EAAD,CAAP,GAAcT,OAAO,CAACW,CAAD,CAArB;QACD,CAN0D,CAMzD;;;QAGFF,EAAE;MACH;IACF;EACF,CA/ByC,CA+BxC;;;EAGFL,IAAI,CAACI,CAAD,CAAJ,GAAUC,EAAV,CAlC0C,CAkC5B;;EAEdP,MAAM,CAACU,MAAP,CAAcH,EAAd,EAAkBP,MAAM,CAACW,MAAP,GAAgBJ,EAAlC,EApC0C,CAoCH;;EAEvC,IAAIT,OAAJ,EAAa;IACXA,OAAO,CAACY,MAAR,CAAeH,EAAf,EAAmBT,OAAO,CAACa,MAAR,GAAiBJ,EAApC;EACD,CAxCyC,CAwCxC;;;EAGF,OAAOA,EAAP;AACD"},"metadata":{},"sourceType":"module"}