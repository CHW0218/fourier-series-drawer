{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/ayao/vscode/fourier-series-drawer/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"/Users/ayao/vscode/fourier-series-drawer/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/ayao/vscode/fourier-series-drawer/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import Sketch from'react-p5';import{computeFourierSeries,functionFromPoints}from'../computations';import{add}from'mathjs';import _ from'lodash';import{useColorModeValue}from'@chakra-ui/react';import{jsx as _jsx}from\"react/jsx-runtime\";var Canvas=function Canvas(props){var step=0.001;var colorMode=useColorModeValue('light','dark');var colors={userLine:{light:'#101010',dark:'#efefef'},fourierLine:{light:'#ee5c5c',dark:'#aa5151'},vectorRadius:{light:'#5a5a5a',dark:'#b2b2b2'},vectorCircle:{light:'#c9c9c9',dark:'#484848'}};var _useState=useState(),_useState2=_slicedToArray(_useState,2),p5=_useState2[0],setP5=_useState2[1];var _useState3=useState(props.n),_useState4=_slicedToArray(_useState3,2),n=_useState4[0],setN=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),t=_useState6[0],setT=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),points=_useState8[0],setPoints=_useState8[1];var _useState9=useState(function(){return function(){return[];};}),_useState10=_slicedToArray(_useState9,2),fourierCoefficients=_useState10[0],setFourierCoefficients=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),fourierComputedPoints=_useState12[0],setFourierComputedPoints=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),addToFourierComputedPoints=_useState14[0],setAddToFourierComputedPoints=_useState14[1];/**\n     * Setup P5 Sketch \n     * @param p5 \n     * @param parentRef \n     */var setup=function setup(p5,parentRef){setP5(p5);p5.createCanvas(window.innerWidth,window.innerHeight).parent(parentRef);p5.frameRate(60);};/**\n     * Draw function for P5 sketch, updates on an infinite loop\n     * @param p5 \n     */var draw=function draw(p5){switch(props.mode){/* \n            Input mode: allow user to draw using cursor\n            */case'input':{if(!props.drawerIsOpen){// p5.stroke(colors.userLine[colorMode])\n// add the cursor's coordinates to the set of points and draw the line\nif(p5.mouseIsPressed===true&&(p5.mouseX>220||p5.mouseY>34)){// <points> is the array of coordinate pairs centred about (0,0)\n// so the cursor's position needs to be offset and reflected across the x-axis in order for the\n// first quadrant to be located in the top right (on the P5 canvas, it's the bottom right)\nsetPoints(addToPoints([p5.mouseX-window.innerWidth/2,-p5.mouseY+window.innerHeight/2]));// p5.line(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY);\nplotPoints(p5,points,colors.userLine[colorMode]);}}break;}/*\n            Animate mode: perform computations, drawing, and frame rendering\n            */case'animate':{// clear the canvas\np5.clear();// plot user-inputted line\nif(props.showUserInput){plotPoints(p5,points,colors.userLine[colorMode]);}// get fourier coefficients for the current <t>            \nvar fourier_t=fourierCoefficients(t);// add to the line generated by the fourier series if it has not yet been fully created\n// the line being drawn out by the tip of the vectors is the sum of all the vectors\nif(addToFourierComputedPoints){var endpoint=fourier_t.reduce(function(a,b){return add(a,b);});setFourierComputedPoints(function(fourierComputedPoints){return[].concat(_toConsumableArray(fourierComputedPoints),[[endpoint.re,endpoint.im]]);});}// plot the line generate so far by the fourier series\nplotPoints(p5,fourierComputedPoints.slice(1),colors.fourierLine[colorMode]);/*\n                Render lines for each vector in the Fourier series\n                */ // set starting point to 0, 0\nvar lx1=0,ly1=0;// iterate <i> such that its absolute value descends by one every other index from n // 2 to 0\n// while oscillating between negative and positive\n// e.g.: for n=7: [-3, 3, -2, 2, -1, 1, 0]\nvar _iterator=_createForOfIteratorHelper(_.range(1,n+1).map(function(m){return Math.pow(-1,m)*Math.floor(m/2);})),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var i=_step.value;// get the value in the Fourier series at index <i>\n// const vector = fourier_t[i < 0 ? fourier_t.length + i : i]\nvar vector=fourier_t.at(i);// set the endpoint of the vector\nvar lx2=vector.re+lx1;var ly2=vector.im+ly1;// draw the singular vector\np5.stroke(colors.vectorRadius[colorMode]);p5.line.apply(p5,_toConsumableArray(centreCoords(lx2,ly2)).concat(_toConsumableArray(centreCoords(lx1,ly1))));if(props.drawCircles){p5.noFill();p5.stroke(colors.vectorCircle[colorMode]);var r=Math.round(Math.hypot(lx2-lx1,ly2-ly1));p5.circle.apply(p5,_toConsumableArray(centreCoords(lx1,ly1)).concat([2*r]));}lx1=lx2;ly1=ly2;}// stop adding redundant points if all points have been computed\n}catch(err){_iterator.e(err);}finally{_iterator.f();}setAddToFourierComputedPoints(fourierComputedPoints.length>1/step+1?false:true);// increment the value of t, 0 ≤ t ≤ 1 and rollover to 0 when it reaches 1\nif(t>=1){setT(0);}else{setT(t+step);}break;}}};/**\n     * Adjusts a coordinate pair centred about (0,0) to be centred about the centre of the canvas\n     * @param x number\n     * @param y number\n     * @returns [number, number] tuple of numbers with values adjusted to display on canvas\n     */var centreCoords=function centreCoords(x,y){return[x+window.innerWidth/2,-y+window.innerHeight/2];};/**\n     * Appends <p> to <points> because an anonymous function doesn't seem to work\n     * @param p [number, number] coordinate pair\n     * @returns [number, number][] original array with <p> appended\n     */var addToPoints=function addToPoints(p){return[].concat(_toConsumableArray(points),[p]);};/**\n     * Update Sketch dimensions on windowResize event \n     * @param p5 \n     */var windowResized=function windowResized(p5){p5.resizeCanvas(window.innerWidth,window.innerHeight);// render the line because canvas gets cleared on resize\nplotPoints(p5,points,colors.userLine[colorMode]);};/**\n     * Plot a line of color <lineColor> in order of the coordinate pairs provided in <points>\n     * @param p5 \n     * @param points [number, number][] array of coordinate pairs\n     * @param lineColor string of the line color\n     */var plotPoints=function plotPoints(p5,points,lineColor){p5.stroke(lineColor);p5.strokeWeight(1);for(var i=1;i<points.length;i++){var _centreCoords=centreCoords(points[i-1][0],points[i-1][1]),_centreCoords2=_slicedToArray(_centreCoords,2),x1=_centreCoords2[0],y1=_centreCoords2[1];var _centreCoords3=centreCoords(points[i][0],points[i][1]),_centreCoords4=_slicedToArray(_centreCoords3,2),x2=_centreCoords4[0],y2=_centreCoords4[1];p5.line(x1,y1,x2,y2);}};useEffect(function(){switch(props.mode){case'input':{if(p5){plotPoints(p5,points,colors.userLine[colorMode]);}break;}/* Get Fourier series function when animation button pressed */case'processing':{if(points.length>0){var f=computeFourierSeries(n,functionFromPoints(points.reverse()));setFourierCoefficients(function(){return function(t){return f(t);};});props.setMode('animate');}else{// revert back to input if no points have been inputted\nprops.setMode('input');}break;}/* Reset all parameters to default and clear the canvas */case'reset':{setT(0);setPoints([]);setFourierComputedPoints([]);setAddToFourierComputedPoints(true);setFourierCoefficients(function(){return function(){return[];};});props.setMode('input');if(p5){p5.clear();}break;}}if(props.n!==n){if(props.mode==='animate'){var _f=computeFourierSeries(props.n,functionFromPoints(points));setFourierCoefficients(function(){return function(t){return _f(t);};});setFourierComputedPoints([]);setAddToFourierComputedPoints(true);}setN(props.n);}},[fourierCoefficients,props,points,fourierComputedPoints,n,p5,colorMode]);return/*#__PURE__*/_jsx(Sketch,{setup:setup,draw:draw,windowResized:windowResized});};export default Canvas;","map":{"version":3,"names":["useEffect","useState","Sketch","computeFourierSeries","functionFromPoints","add","_","useColorModeValue","Canvas","props","step","colorMode","colors","userLine","light","dark","fourierLine","vectorRadius","vectorCircle","p5","setP5","n","setN","t","setT","points","setPoints","fourierCoefficients","setFourierCoefficients","fourierComputedPoints","setFourierComputedPoints","addToFourierComputedPoints","setAddToFourierComputedPoints","setup","parentRef","createCanvas","window","innerWidth","innerHeight","parent","frameRate","draw","mode","drawerIsOpen","mouseIsPressed","mouseX","mouseY","addToPoints","plotPoints","clear","showUserInput","fourier_t","endpoint","reduce","a","b","re","im","slice","lx1","ly1","range","map","m","Math","pow","floor","i","vector","at","lx2","ly2","stroke","line","centreCoords","drawCircles","noFill","r","round","hypot","circle","length","x","y","p","windowResized","resizeCanvas","lineColor","strokeWeight","x1","y1","x2","y2","f","reverse","setMode"],"sources":["/Users/ayao/vscode/fourier-series-drawer/src/components/Canvas.tsx"],"sourcesContent":["import { FC, useEffect, useState } from 'react'\nimport Sketch from 'react-p5'\nimport P5 from 'p5'\nimport { computeFourierSeries, functionFromPoints } from '../computations'\nimport { add, Complex } from 'mathjs'\nimport _ from 'lodash'\nimport { useColorModeValue } from '@chakra-ui/react'\n\ntype CanvasProps = { \n    n: number,\n    mode: string, \n    setMode: (m: string) => void,\n    lineColor: string,\n    drawCircles: boolean,\n    drawerIsOpen: boolean,\n    showUserInput: boolean\n}\n\ntype FourierCoefficients = (t: number) => Complex[]\n\nconst Canvas: FC<CanvasProps> = props => {\n\n    const step = 0.001\n    const colorMode = useColorModeValue('light', 'dark')\n    const colors = {\n        userLine: {\n            light: '#101010',\n            dark: '#efefef'\n        },\n        fourierLine: {\n            light: '#ee5c5c',\n            dark: '#aa5151'\n        },\n        vectorRadius: {\n            light: '#5a5a5a',\n            dark: '#b2b2b2'\n        },\n        vectorCircle: {\n            light: '#c9c9c9',\n            dark: '#484848'\n        }\n    }\n\n    const [p5, setP5] = useState<P5>()\n    const [n, setN] = useState<number>(props.n)\n    const [t, setT] = useState<number>(0)\n    const [points, setPoints] = useState<Array<[number, number]>>([])\n    const [fourierCoefficients, setFourierCoefficients] = useState <FourierCoefficients>(() => () => [])\n    const [fourierComputedPoints, setFourierComputedPoints] = useState<Array<[number, number]>>([])\n    const [addToFourierComputedPoints, setAddToFourierComputedPoints] = useState<boolean>(true)\n\n    /**\n     * Setup P5 Sketch \n     * @param p5 \n     * @param parentRef \n     */\n    const setup = (p5: P5, parentRef: Element ) => {\n        setP5(p5)\n        p5.createCanvas(window.innerWidth, window.innerHeight).parent(parentRef);\n        p5.frameRate(60)\n    }\n\n    /**\n     * Draw function for P5 sketch, updates on an infinite loop\n     * @param p5 \n     */\n    const draw = (p5: P5) => {\n        switch (props.mode) {\n            /* \n            Input mode: allow user to draw using cursor\n            */\n            case 'input': {\n                if (!props.drawerIsOpen) {\n                    // p5.stroke(colors.userLine[colorMode])\n\n                    // add the cursor's coordinates to the set of points and draw the line\n                    if (p5.mouseIsPressed === true && (p5.mouseX > 220 || p5.mouseY > 34)) {\n                        // <points> is the array of coordinate pairs centred about (0,0)\n                        // so the cursor's position needs to be offset and reflected across the x-axis in order for the\n                        // first quadrant to be located in the top right (on the P5 canvas, it's the bottom right)\n                        setPoints(addToPoints([p5.mouseX - window.innerWidth / 2, -p5.mouseY + window.innerHeight / 2]))\n                        // p5.line(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY);\n                        plotPoints(p5, points, colors.userLine[colorMode])\n                    }\n                }\n                break\n            }\n\n            /*\n            Animate mode: perform computations, drawing, and frame rendering\n            */\n            case 'animate': {\n                // clear the canvas\n                p5.clear()\n                // plot user-inputted line\n                if (props.showUserInput) {\n                    plotPoints(p5, points, colors.userLine[colorMode])\n                }\n\n                // get fourier coefficients for the current <t>            \n                let fourier_t = fourierCoefficients(t)\n\n                // add to the line generated by the fourier series if it has not yet been fully created\n                // the line being drawn out by the tip of the vectors is the sum of all the vectors\n                if (addToFourierComputedPoints) {\n                    const endpoint = fourier_t.reduce((a, b) => add(a, b))\n                    setFourierComputedPoints((fourierComputedPoints: Array<[number, number]>) => [...fourierComputedPoints, [endpoint.re, endpoint.im]])\n                }\n\n                // plot the line generate so far by the fourier series\n                plotPoints(p5, fourierComputedPoints.slice(1), colors.fourierLine[colorMode])\n\n                /*\n                Render lines for each vector in the Fourier series\n                */\n                // set starting point to 0, 0\n                let [lx1, ly1] = [0, 0]\n\n                // iterate <i> such that its absolute value descends by one every other index from n // 2 to 0\n                // while oscillating between negative and positive\n                // e.g.: for n=7: [-3, 3, -2, 2, -1, 1, 0]\n                for (const i of _.range(1, n + 1).map(m => Math.pow(-1, m) * Math.floor(m / 2))) {\n                    // get the value in the Fourier series at index <i>\n                    // const vector = fourier_t[i < 0 ? fourier_t.length + i : i]\n                    const vector = fourier_t.at(i) as Complex\n\n                    // set the endpoint of the vector\n                    let lx2 = vector.re + lx1\n                    let ly2 = vector.im + ly1\n\n                    // draw the singular vector\n                    p5.stroke(colors.vectorRadius[colorMode])\n                    p5.line(...centreCoords(lx2, ly2), ...centreCoords(lx1, ly1))\n\n                    if (props.drawCircles) {\n                        p5.noFill()\n                        p5.stroke(colors.vectorCircle[colorMode])\n                        const r = Math.round(Math.hypot(lx2 - lx1, ly2 - ly1))\n                        p5.circle(...centreCoords(lx1, ly1), 2 * r)\n                    }\n\n                    lx1 = lx2\n                    ly1 = ly2\n                }\n\n                // stop adding redundant points if all points have been computed\n                setAddToFourierComputedPoints(fourierComputedPoints.length > (1 / step) + 1 ? false : true)\n\n                // increment the value of t, 0 ≤ t ≤ 1 and rollover to 0 when it reaches 1\n                if (t >= 1) {\n                    setT(0)\n                } else {\n                    setT(t + step)\n                }\n                break\n            }\n        }\n    }\n\n    /**\n     * Adjusts a coordinate pair centred about (0,0) to be centred about the centre of the canvas\n     * @param x number\n     * @param y number\n     * @returns [number, number] tuple of numbers with values adjusted to display on canvas\n     */\n    const centreCoords = (x: number, y: number): [number, number] => {\n        return [x + window.innerWidth / 2, -y + window.innerHeight / 2] as [number, number]\n    }\n\n    /**\n     * Appends <p> to <points> because an anonymous function doesn't seem to work\n     * @param p [number, number] coordinate pair\n     * @returns [number, number][] original array with <p> appended\n     */\n    const addToPoints = (p: [number, number]) => {\n        return [...points, p]\n    }\n    \n    /**\n     * Update Sketch dimensions on windowResize event \n     * @param p5 \n     */\n    const windowResized = (p5: P5) => {\n        p5.resizeCanvas(window.innerWidth, window.innerHeight);\n\n        // render the line because canvas gets cleared on resize\n        plotPoints(p5, points, colors.userLine[colorMode])\n    }\n\n    /**\n     * Plot a line of color <lineColor> in order of the coordinate pairs provided in <points>\n     * @param p5 \n     * @param points [number, number][] array of coordinate pairs\n     * @param lineColor string of the line color\n     */\n    const plotPoints = (p5: P5, points: Array<[number, number]>, lineColor: string) => {\n        p5.stroke(lineColor)\n        p5.strokeWeight(1)\n        for (let i = 1; i < points.length; i++) {\n            const [x1, y1] = centreCoords(points[i - 1][0], points[i - 1][1])\n            const [x2, y2] = centreCoords(points[i][0], points[i][1])\n            p5.line(x1, y1, x2, y2)\n        }\n    }\n\n\n    useEffect(() => {\n\n        switch (props.mode) {\n            case 'input': {\n                if (p5) {\n                    plotPoints(p5, points, colors.userLine[colorMode])\n                }\n                break\n            }\n\n            /* Get Fourier series function when animation button pressed */\n            case 'processing': {\n                if (points.length > 0) {\n                    const f = computeFourierSeries(\n                        n,\n                        functionFromPoints(points.reverse())\n                    )\n                    setFourierCoefficients(() => (t: number) => f(t))\n                    props.setMode('animate')\n                } else {\n                    // revert back to input if no points have been inputted\n                    props.setMode('input')\n                }\n                break\n            }\n\n            /* Reset all parameters to default and clear the canvas */\n            case 'reset': {\n                setT(0)\n                setPoints([])\n                setFourierComputedPoints([])\n                setAddToFourierComputedPoints(true)\n                setFourierCoefficients(() => () => [])\n                props.setMode('input')\n\n                if (p5) {\n                    p5.clear()\n                }\n                break\n            }\n\n        }\n\n        if (props.n !== n) {\n            if (props.mode === 'animate') {\n                const f = computeFourierSeries(\n                    props.n,\n                    functionFromPoints(points)\n                )\n                setFourierCoefficients(() => (t: number) => f(t))\n                setFourierComputedPoints([])\n                setAddToFourierComputedPoints(true)\n            }\n            setN(props.n)\n        }\n    }, [\n        fourierCoefficients,\n        props,\n        points,\n        fourierComputedPoints,\n        n,\n        p5,\n        colorMode\n    ])\n  \n\n    return <Sketch setup={setup} draw={draw} windowResized={windowResized} />\n}\n\nexport default Canvas"],"mappings":"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"},"metadata":{},"sourceType":"module"}