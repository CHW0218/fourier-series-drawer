{"ast":null,"code":"import seedrandom from 'seedrandom';\nvar singletonRandom = /* #__PURE__ */seedrandom(Date.now());\nexport function createRng(randomSeed) {\n  var random; // create a new random generator with given seed\n\n  function setSeed(seed) {\n    random = seed === null ? singletonRandom : seedrandom(String(seed));\n  } // initialize a seeded pseudo random number generator with config's random seed\n\n\n  setSeed(randomSeed); // wrapper function so the rng can be updated via generator\n\n  function rng() {\n    return random();\n  }\n\n  return rng;\n}","map":{"version":3,"names":["seedrandom","singletonRandom","Date","now","createRng","randomSeed","random","setSeed","seed","String","rng"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/function/probability/util/seededRNG.js"],"sourcesContent":["import seedrandom from 'seedrandom';\nvar singletonRandom = /* #__PURE__ */seedrandom(Date.now());\nexport function createRng(randomSeed) {\n  var random; // create a new random generator with given seed\n\n  function setSeed(seed) {\n    random = seed === null ? singletonRandom : seedrandom(String(seed));\n  } // initialize a seeded pseudo random number generator with config's random seed\n\n\n  setSeed(randomSeed); // wrapper function so the rng can be updated via generator\n\n  function rng() {\n    return random();\n  }\n\n  return rng;\n}"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,IAAIC,eAAe,GAAG,eAAeD,UAAU,CAACE,IAAI,CAACC,GAAL,EAAD,CAA/C;AACA,OAAO,SAASC,SAAT,CAAmBC,UAAnB,EAA+B;EACpC,IAAIC,MAAJ,CADoC,CACxB;;EAEZ,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;IACrBF,MAAM,GAAGE,IAAI,KAAK,IAAT,GAAgBP,eAAhB,GAAkCD,UAAU,CAACS,MAAM,CAACD,IAAD,CAAP,CAArD;EACD,CALmC,CAKlC;;;EAGFD,OAAO,CAACF,UAAD,CAAP,CARoC,CAQf;;EAErB,SAASK,GAAT,GAAe;IACb,OAAOJ,MAAM,EAAb;EACD;;EAED,OAAOI,GAAP;AACD"},"metadata":{},"sourceType":"module"}