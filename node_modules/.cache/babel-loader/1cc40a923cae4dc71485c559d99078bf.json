{"ast":null,"code":"import { createAlgorithm02 } from '../../type/matrix/utils/algorithm02.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { createAlgorithm06 } from '../../type/matrix/utils/algorithm06.js';\nimport { factory } from '../../utils/factory.js';\nimport { andNumber } from '../../plain/number/index.js';\nvar name = 'and';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'not'];\nexport var createAnd = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      zeros = _ref.zeros,\n      not = _ref.not;\n  var algorithm02 = createAlgorithm02({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm06 = createAlgorithm06({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = createAlgorithm11({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = createAlgorithm13({\n    typed: typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed: typed\n  });\n  /**\n   * Logical `and`. Test whether two values are both defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.and(x, y)\n   *\n   * Examples:\n   *\n   *    math.and(2, 4)   // returns true\n   *\n   *    a = [2, 0, 0]\n   *    b = [3, 7, 0]\n   *    c = 0\n   *\n   *    math.and(a, b)   // returns [true, false, false]\n   *    math.and(a, c)   // returns [false, false, false]\n   *\n   * See also:\n   *\n   *    not, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when both inputs are defined with a nonzero/nonempty value.\n   */\n\n  return typed(name, {\n    'number, number': andNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (x.re !== 0 || x.im !== 0) && (y.re !== 0 || y.im !== 0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return !x.isZero() && !y.isZero() && !x.isNaN() && !y.isNaN();\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return this(x.value || 0, y.value || 0);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm06(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm02(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      // check scalar\n      if (not(y)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      // check scalar\n      if (not(y)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      // check scalar\n      if (not(x)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm11(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      // check scalar\n      if (not(x)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});","map":{"version":3,"names":["createAlgorithm02","createAlgorithm11","createAlgorithm13","createAlgorithm14","createAlgorithm06","factory","andNumber","name","dependencies","createAnd","_ref","typed","matrix","equalScalar","zeros","not","algorithm02","algorithm06","algorithm11","algorithm13","algorithm14","ComplexComplex","x","y","re","im","BigNumberBigNumber","isZero","isNaN","UnitUnit","value","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixAny","size","storage","DenseMatrixAny","anySparseMatrix","anyDenseMatrix","ArrayAny","anyArray"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/function/logical/and.js"],"sourcesContent":["import { createAlgorithm02 } from '../../type/matrix/utils/algorithm02.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { createAlgorithm06 } from '../../type/matrix/utils/algorithm06.js';\nimport { factory } from '../../utils/factory.js';\nimport { andNumber } from '../../plain/number/index.js';\nvar name = 'and';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'not'];\nexport var createAnd = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    zeros,\n    not\n  } = _ref;\n  var algorithm02 = createAlgorithm02({\n    typed,\n    equalScalar\n  });\n  var algorithm06 = createAlgorithm06({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = createAlgorithm11({\n    typed,\n    equalScalar\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Logical `and`. Test whether two values are both defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.and(x, y)\n   *\n   * Examples:\n   *\n   *    math.and(2, 4)   // returns true\n   *\n   *    a = [2, 0, 0]\n   *    b = [3, 7, 0]\n   *    c = 0\n   *\n   *    math.and(a, b)   // returns [true, false, false]\n   *    math.and(a, c)   // returns [false, false, false]\n   *\n   * See also:\n   *\n   *    not, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when both inputs are defined with a nonzero/nonempty value.\n   */\n\n  return typed(name, {\n    'number, number': andNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (x.re !== 0 || x.im !== 0) && (y.re !== 0 || y.im !== 0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return !x.isZero() && !y.isZero() && !x.isNaN() && !y.isNaN();\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return this(x.value || 0, y.value || 0);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm06(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm02(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      // check scalar\n      if (not(y)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      // check scalar\n      if (not(y)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      // check scalar\n      if (not(x)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm11(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      // check scalar\n      if (not(x)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}