{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { getSafeProperty } from '../../utils/customs.js';\nimport { embeddedDocs } from '../embeddedDocs/embeddedDocs.js';\nimport { hasOwnProperty } from '../../utils/object.js';\nvar name = 'help';\nvar dependencies = ['typed', 'mathWithTransform', 'Help'];\nexport var createHelp = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      mathWithTransform = _ref.mathWithTransform,\n      Help = _ref.Help;\n  /**\n   * Retrieve help on a function or data type.\n   * Help files are retrieved from the embedded documentation in math.docs.\n   *\n   * Syntax:\n   *\n   *    math.help(search)\n   *\n   * Examples:\n   *\n   *    console.log(math.help('sin').toString())\n   *    console.log(math.help(math.add).toString())\n   *    console.log(math.help(math.add).toJSON())\n   *\n   * @param {Function | string | Object} search   A function or function name\n   *                                              for which to get help\n   * @return {Help} A help object\n   */\n\n  return typed(name, {\n    any: function any(search) {\n      var prop;\n      var searchName = search;\n\n      if (typeof search !== 'string') {\n        for (prop in mathWithTransform) {\n          // search in functions and constants\n          if (hasOwnProperty(mathWithTransform, prop) && search === mathWithTransform[prop]) {\n            searchName = prop;\n            break;\n          }\n        }\n        /* TODO: implement help for data types\n         if (!text) {\n         // search data type\n         for (prop in math.type) {\n         if (hasOwnProperty(math, prop)) {\n         if (search === math.type[prop]) {\n         text = prop\n         break\n         }\n         }\n         }\n         }\n         */\n\n      }\n\n      var doc = getSafeProperty(embeddedDocs, searchName);\n\n      if (!doc) {\n        var searchText = typeof searchName === 'function' ? searchName.name : searchName;\n        throw new Error('No documentation found on \"' + searchText + '\"');\n      }\n\n      return new Help(doc);\n    }\n  });\n});","map":{"version":3,"names":["factory","getSafeProperty","embeddedDocs","hasOwnProperty","name","dependencies","createHelp","_ref","typed","mathWithTransform","Help","any","search","prop","searchName","doc","searchText","Error"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/expression/function/help.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { getSafeProperty } from '../../utils/customs.js';\nimport { embeddedDocs } from '../embeddedDocs/embeddedDocs.js';\nimport { hasOwnProperty } from '../../utils/object.js';\nvar name = 'help';\nvar dependencies = ['typed', 'mathWithTransform', 'Help'];\nexport var createHelp = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    mathWithTransform,\n    Help\n  } = _ref;\n\n  /**\n   * Retrieve help on a function or data type.\n   * Help files are retrieved from the embedded documentation in math.docs.\n   *\n   * Syntax:\n   *\n   *    math.help(search)\n   *\n   * Examples:\n   *\n   *    console.log(math.help('sin').toString())\n   *    console.log(math.help(math.add).toString())\n   *    console.log(math.help(math.add).toJSON())\n   *\n   * @param {Function | string | Object} search   A function or function name\n   *                                              for which to get help\n   * @return {Help} A help object\n   */\n  return typed(name, {\n    any: function any(search) {\n      var prop;\n      var searchName = search;\n\n      if (typeof search !== 'string') {\n        for (prop in mathWithTransform) {\n          // search in functions and constants\n          if (hasOwnProperty(mathWithTransform, prop) && search === mathWithTransform[prop]) {\n            searchName = prop;\n            break;\n          }\n        }\n        /* TODO: implement help for data types\n         if (!text) {\n         // search data type\n         for (prop in math.type) {\n         if (hasOwnProperty(math, prop)) {\n         if (search === math.type[prop]) {\n         text = prop\n         break\n         }\n         }\n         }\n         }\n         */\n\n      }\n\n      var doc = getSafeProperty(embeddedDocs, searchName);\n\n      if (!doc) {\n        var searchText = typeof searchName === 'function' ? searchName.name : searchName;\n        throw new Error('No documentation found on \"' + searchText + '\"');\n      }\n\n      return new Help(doc);\n    }\n  });\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,mBAAV,EAA+B,MAA/B,CAAnB;AACA,OAAO,IAAIC,UAAU,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EACzE,IACEC,KADF,GAIID,IAJJ,CACEC,KADF;EAAA,IAEEC,iBAFF,GAIIF,IAJJ,CAEEE,iBAFF;EAAA,IAGEC,IAHF,GAIIH,IAJJ,CAGEG,IAHF;EAMA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,OAAOF,KAAK,CAACJ,IAAD,EAAO;IACjBO,GAAG,EAAE,SAASA,GAAT,CAAaC,MAAb,EAAqB;MACxB,IAAIC,IAAJ;MACA,IAAIC,UAAU,GAAGF,MAAjB;;MAEA,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;QAC9B,KAAKC,IAAL,IAAaJ,iBAAb,EAAgC;UAC9B;UACA,IAAIN,cAAc,CAACM,iBAAD,EAAoBI,IAApB,CAAd,IAA2CD,MAAM,KAAKH,iBAAiB,CAACI,IAAD,CAA3E,EAAmF;YACjFC,UAAU,GAAGD,IAAb;YACA;UACD;QACF;QACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEO;;MAED,IAAIE,GAAG,GAAGd,eAAe,CAACC,YAAD,EAAeY,UAAf,CAAzB;;MAEA,IAAI,CAACC,GAAL,EAAU;QACR,IAAIC,UAAU,GAAG,OAAOF,UAAP,KAAsB,UAAtB,GAAmCA,UAAU,CAACV,IAA9C,GAAqDU,UAAtE;QACA,MAAM,IAAIG,KAAJ,CAAU,gCAAgCD,UAAhC,GAA6C,GAAvD,CAAN;MACD;;MAED,OAAO,IAAIN,IAAJ,CAASK,GAAT,CAAP;IACD;EArCgB,CAAP,CAAZ;AAuCD,CAhE6C,CAAvC"},"metadata":{},"sourceType":"module"}