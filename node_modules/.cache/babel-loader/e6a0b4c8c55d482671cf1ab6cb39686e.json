{"ast":null,"code":"import { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { createAlgorithm05 } from '../../type/matrix/utils/algorithm05.js';\nimport { factory } from '../../utils/factory.js';\nimport { orNumber } from '../../plain/number/index.js';\nvar name = 'or';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nexport var createOr = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm03 = createAlgorithm03({\n    typed: typed\n  });\n  var algorithm05 = createAlgorithm05({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = createAlgorithm12({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed: typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed: typed\n  });\n  /**\n   * Logical `or`. Test if at least one value is defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.or(x, y)\n   *\n   * Examples:\n   *\n   *    math.or(2, 4)   // returns true\n   *\n   *    a = [2, 5, 0]\n   *    b = [0, 22, 0]\n   *    c = 0\n   *\n   *    math.or(a, b)   // returns [true, true, false]\n   *    math.or(b, c)   // returns [false, true, false]\n   *\n   * See also:\n   *\n   *    and, not, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when one of the inputs is defined with a nonzero/nonempty value.\n   */\n\n  return typed(name, {\n    'number, number': orNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.re !== 0 || x.im !== 0 || y.re !== 0 || y.im !== 0;\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return !x.isZero() && !x.isNaN() || !y.isZero() && !y.isNaN();\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return this(x.value || 0, y.value || 0);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm05(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});","map":{"version":3,"names":["createAlgorithm03","createAlgorithm12","createAlgorithm13","createAlgorithm14","createAlgorithm05","factory","orNumber","name","dependencies","createOr","_ref","typed","matrix","equalScalar","DenseMatrix","algorithm03","algorithm05","algorithm12","algorithm13","algorithm14","ComplexComplex","x","y","re","im","BigNumberBigNumber","isZero","isNaN","UnitUnit","value","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixAny","DenseMatrixAny","anySparseMatrix","anyDenseMatrix","ArrayAny","anyArray"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/function/logical/or.js"],"sourcesContent":["import { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { createAlgorithm05 } from '../../type/matrix/utils/algorithm05.js';\nimport { factory } from '../../utils/factory.js';\nimport { orNumber } from '../../plain/number/index.js';\nvar name = 'or';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nexport var createOr = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm05 = createAlgorithm05({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Logical `or`. Test if at least one value is defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.or(x, y)\n   *\n   * Examples:\n   *\n   *    math.or(2, 4)   // returns true\n   *\n   *    a = [2, 5, 0]\n   *    b = [0, 22, 0]\n   *    c = 0\n   *\n   *    math.or(a, b)   // returns [true, true, false]\n   *    math.or(b, c)   // returns [false, true, false]\n   *\n   * See also:\n   *\n   *    and, not, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when one of the inputs is defined with a nonzero/nonempty value.\n   */\n\n  return typed(name, {\n    'number, number': orNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.re !== 0 || x.im !== 0 || y.re !== 0 || y.im !== 0;\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return !x.isZero() && !x.isNaN() || !y.isZero() && !y.isNaN();\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return this(x.value || 0, y.value || 0);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm05(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,wCAAlC;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,IAAIC,IAAI,GAAG,IAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,aAApB,EAAmC,aAAnC,CAAnB;AACA,OAAO,IAAIC,QAAQ,GAAG,eAAeJ,OAAO,CAACE,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EACvE,IACEC,KADF,GAKID,IALJ,CACEC,KADF;EAAA,IAEEC,MAFF,GAKIF,IALJ,CAEEE,MAFF;EAAA,IAGEC,WAHF,GAKIH,IALJ,CAGEG,WAHF;EAAA,IAIEC,WAJF,GAKIJ,IALJ,CAIEI,WAJF;EAMA,IAAIC,WAAW,GAAGf,iBAAiB,CAAC;IAClCW,KAAK,EAALA;EADkC,CAAD,CAAnC;EAGA,IAAIK,WAAW,GAAGZ,iBAAiB,CAAC;IAClCO,KAAK,EAALA,KADkC;IAElCE,WAAW,EAAXA;EAFkC,CAAD,CAAnC;EAIA,IAAII,WAAW,GAAGhB,iBAAiB,CAAC;IAClCU,KAAK,EAALA,KADkC;IAElCG,WAAW,EAAXA;EAFkC,CAAD,CAAnC;EAIA,IAAII,WAAW,GAAGhB,iBAAiB,CAAC;IAClCS,KAAK,EAALA;EADkC,CAAD,CAAnC;EAGA,IAAIQ,WAAW,GAAGhB,iBAAiB,CAAC;IAClCQ,KAAK,EAALA;EADkC,CAAD,CAAnC;EAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,OAAOA,KAAK,CAACJ,IAAD,EAAO;IACjB,kBAAkBD,QADD;IAEjB,oBAAoB,SAASc,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;MAChD,OAAOD,CAAC,CAACE,EAAF,KAAS,CAAT,IAAcF,CAAC,CAACG,EAAF,KAAS,CAAvB,IAA4BF,CAAC,CAACC,EAAF,KAAS,CAArC,IAA0CD,CAAC,CAACE,EAAF,KAAS,CAA1D;IACD,CAJgB;IAKjB,wBAAwB,SAASC,kBAAT,CAA4BJ,CAA5B,EAA+BC,CAA/B,EAAkC;MACxD,OAAO,CAACD,CAAC,CAACK,MAAF,EAAD,IAAe,CAACL,CAAC,CAACM,KAAF,EAAhB,IAA6B,CAACL,CAAC,CAACI,MAAF,EAAD,IAAe,CAACJ,CAAC,CAACK,KAAF,EAApD;IACD,CAPgB;IAQjB,cAAc,SAASC,QAAT,CAAkBP,CAAlB,EAAqBC,CAArB,EAAwB;MACpC,OAAO,KAAKD,CAAC,CAACQ,KAAF,IAAW,CAAhB,EAAmBP,CAAC,CAACO,KAAF,IAAW,CAA9B,CAAP;IACD,CAVgB;IAWjB,8BAA8B,SAASC,wBAAT,CAAkCT,CAAlC,EAAqCC,CAArC,EAAwC;MACpE,OAAON,WAAW,CAACK,CAAD,EAAIC,CAAJ,EAAO,IAAP,CAAlB;IACD,CAbgB;IAcjB,6BAA6B,SAASS,uBAAT,CAAiCV,CAAjC,EAAoCC,CAApC,EAAuC;MAClE,OAAOP,WAAW,CAACO,CAAD,EAAID,CAAJ,EAAO,IAAP,EAAa,IAAb,CAAlB;IACD,CAhBgB;IAiBjB,6BAA6B,SAASW,uBAAT,CAAiCX,CAAjC,EAAoCC,CAApC,EAAuC;MAClE,OAAOP,WAAW,CAACM,CAAD,EAAIC,CAAJ,EAAO,IAAP,EAAa,KAAb,CAAlB;IACD,CAnBgB;IAoBjB,4BAA4B,SAASW,sBAAT,CAAgCZ,CAAhC,EAAmCC,CAAnC,EAAsC;MAChE,OAAOJ,WAAW,CAACG,CAAD,EAAIC,CAAJ,EAAO,IAAP,CAAlB;IACD,CAtBgB;IAuBjB,gBAAgB,SAASY,UAAT,CAAoBb,CAApB,EAAuBC,CAAvB,EAA0B;MACxC;MACA,OAAO,KAAKV,MAAM,CAACS,CAAD,CAAX,EAAgBT,MAAM,CAACU,CAAD,CAAtB,EAA2Ba,OAA3B,EAAP;IACD,CA1BgB;IA2BjB,iBAAiB,SAASC,WAAT,CAAqBf,CAArB,EAAwBC,CAAxB,EAA2B;MAC1C;MACA,OAAO,KAAKV,MAAM,CAACS,CAAD,CAAX,EAAgBC,CAAhB,CAAP;IACD,CA9BgB;IA+BjB,iBAAiB,SAASe,WAAT,CAAqBhB,CAArB,EAAwBC,CAAxB,EAA2B;MAC1C;MACA,OAAO,KAAKD,CAAL,EAAQT,MAAM,CAACU,CAAD,CAAd,CAAP;IACD,CAlCgB;IAmCjB,qBAAqB,SAASgB,eAAT,CAAyBjB,CAAzB,EAA4BC,CAA5B,EAA+B;MAClD,OAAOL,WAAW,CAACI,CAAD,EAAIC,CAAJ,EAAO,IAAP,EAAa,KAAb,CAAlB;IACD,CArCgB;IAsCjB,oBAAoB,SAASiB,cAAT,CAAwBlB,CAAxB,EAA2BC,CAA3B,EAA8B;MAChD,OAAOH,WAAW,CAACE,CAAD,EAAIC,CAAJ,EAAO,IAAP,EAAa,KAAb,CAAlB;IACD,CAxCgB;IAyCjB,qBAAqB,SAASkB,eAAT,CAAyBnB,CAAzB,EAA4BC,CAA5B,EAA+B;MAClD,OAAOL,WAAW,CAACK,CAAD,EAAID,CAAJ,EAAO,IAAP,EAAa,IAAb,CAAlB;IACD,CA3CgB;IA4CjB,oBAAoB,SAASoB,cAAT,CAAwBpB,CAAxB,EAA2BC,CAA3B,EAA8B;MAChD,OAAOH,WAAW,CAACG,CAAD,EAAID,CAAJ,EAAO,IAAP,EAAa,IAAb,CAAlB;IACD,CA9CgB;IA+CjB,cAAc,SAASqB,QAAT,CAAkBrB,CAAlB,EAAqBC,CAArB,EAAwB;MACpC;MACA,OAAOH,WAAW,CAACP,MAAM,CAACS,CAAD,CAAP,EAAYC,CAAZ,EAAe,IAAf,EAAqB,KAArB,CAAX,CAAuCa,OAAvC,EAAP;IACD,CAlDgB;IAmDjB,cAAc,SAASQ,QAAT,CAAkBtB,CAAlB,EAAqBC,CAArB,EAAwB;MACpC;MACA,OAAOH,WAAW,CAACP,MAAM,CAACU,CAAD,CAAP,EAAYD,CAAZ,EAAe,IAAf,EAAqB,IAArB,CAAX,CAAsCc,OAAtC,EAAP;IACD;EAtDgB,CAAP,CAAZ;AAwDD,CA7G2C,CAArC"},"metadata":{},"sourceType":"module"}