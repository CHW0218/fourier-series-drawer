{"ast":null,"code":"import { isBigNumber, isNumber } from '../../utils/is.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { factory } from '../../utils/factory.js';\nimport { createConcat } from '../../function/matrix/concat.js';\nvar name = 'concat';\nvar dependencies = ['typed', 'matrix', 'isInteger'];\nexport var createConcatTransform = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      isInteger = _ref.isInteger;\n  var concat = createConcat({\n    typed: typed,\n    matrix: matrix,\n    isInteger: isInteger\n  });\n  /**\n   * Attach a transform function to math.range\n   * Adds a property transform containing the transform function.\n   *\n   * This transform changed the last `dim` parameter of function concat\n   * from one-based to zero based\n   */\n\n  return typed('concat', {\n    '...any': function any(args) {\n      // change last argument from one-based to zero-based\n      var lastIndex = args.length - 1;\n      var last = args[lastIndex];\n\n      if (isNumber(last)) {\n        args[lastIndex] = last - 1;\n      } else if (isBigNumber(last)) {\n        args[lastIndex] = last.minus(1);\n      }\n\n      try {\n        return concat.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["isBigNumber","isNumber","errorTransform","factory","createConcat","name","dependencies","createConcatTransform","_ref","typed","matrix","isInteger","concat","any","args","lastIndex","length","last","minus","apply","err","isTransformFunction"],"sources":["/Users/ayao/vscode/fourier-series-drawer/node_modules/mathjs/lib/esm/expression/transform/concat.transform.js"],"sourcesContent":["import { isBigNumber, isNumber } from '../../utils/is.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { factory } from '../../utils/factory.js';\nimport { createConcat } from '../../function/matrix/concat.js';\nvar name = 'concat';\nvar dependencies = ['typed', 'matrix', 'isInteger'];\nexport var createConcatTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    isInteger\n  } = _ref;\n  var concat = createConcat({\n    typed,\n    matrix,\n    isInteger\n  });\n  /**\n   * Attach a transform function to math.range\n   * Adds a property transform containing the transform function.\n   *\n   * This transform changed the last `dim` parameter of function concat\n   * from one-based to zero based\n   */\n\n  return typed('concat', {\n    '...any': function any(args) {\n      // change last argument from one-based to zero-based\n      var lastIndex = args.length - 1;\n      var last = args[lastIndex];\n\n      if (isNumber(last)) {\n        args[lastIndex] = last - 1;\n      } else if (isBigNumber(last)) {\n        args[lastIndex] = last.minus(1);\n      }\n\n      try {\n        return concat.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,mBAAtC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,IAAIC,IAAI,GAAG,QAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,WAApB,CAAnB;AACA,OAAO,IAAIC,qBAAqB,GAAG,eAAeJ,OAAO,CAACE,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EACpF,IACEC,KADF,GAIID,IAJJ,CACEC,KADF;EAAA,IAEEC,MAFF,GAIIF,IAJJ,CAEEE,MAFF;EAAA,IAGEC,SAHF,GAIIH,IAJJ,CAGEG,SAHF;EAKA,IAAIC,MAAM,GAAGR,YAAY,CAAC;IACxBK,KAAK,EAALA,KADwB;IAExBC,MAAM,EAANA,MAFwB;IAGxBC,SAAS,EAATA;EAHwB,CAAD,CAAzB;EAKA;AACF;AACA;AACA;AACA;AACA;AACA;;EAEE,OAAOF,KAAK,CAAC,QAAD,EAAW;IACrB,UAAU,SAASI,GAAT,CAAaC,IAAb,EAAmB;MAC3B;MACA,IAAIC,SAAS,GAAGD,IAAI,CAACE,MAAL,GAAc,CAA9B;MACA,IAAIC,IAAI,GAAGH,IAAI,CAACC,SAAD,CAAf;;MAEA,IAAId,QAAQ,CAACgB,IAAD,CAAZ,EAAoB;QAClBH,IAAI,CAACC,SAAD,CAAJ,GAAkBE,IAAI,GAAG,CAAzB;MACD,CAFD,MAEO,IAAIjB,WAAW,CAACiB,IAAD,CAAf,EAAuB;QAC5BH,IAAI,CAACC,SAAD,CAAJ,GAAkBE,IAAI,CAACC,KAAL,CAAW,CAAX,CAAlB;MACD;;MAED,IAAI;QACF,OAAON,MAAM,CAACO,KAAP,CAAa,IAAb,EAAmBL,IAAnB,CAAP;MACD,CAFD,CAEE,OAAOM,GAAP,EAAY;QACZ,MAAMlB,cAAc,CAACkB,GAAD,CAApB;MACD;IACF;EAjBoB,CAAX,CAAZ;AAmBD,CAtCwD,EAsCtD;EACDC,mBAAmB,EAAE;AADpB,CAtCsD,CAAlD"},"metadata":{},"sourceType":"module"}